<scope ilk="blob" lang="Python" name="win32console">
      <variable citdl="int" name="ATTACH_PARENT_PROCESS" />
      <scope doc="Creates a new console alias" ilk="function" name="AddConsoleAlias" />
      <scope doc="Creates a new console for the calling process" ilk="function" name="AllocConsole" />
      <scope doc="Attaches calling process to console of another process" ilk="function" name="AttachConsole" />
      <variable citdl="int" name="BACKGROUND_BLUE" />
      <variable citdl="int" name="BACKGROUND_GREEN" />
      <variable citdl="int" name="BACKGROUND_INTENSITY" />
      <variable citdl="int" name="BACKGROUND_RED" />
      <variable citdl="int" name="COMMON_LVB_GRID_HORIZONTAL" />
      <variable citdl="int" name="COMMON_LVB_GRID_LVERTICAL" />
      <variable citdl="int" name="COMMON_LVB_GRID_RVERTICAL" />
      <variable citdl="int" name="COMMON_LVB_LEADING_BYTE" />
      <variable citdl="int" name="COMMON_LVB_REVERSE_VIDEO" />
      <variable citdl="int" name="COMMON_LVB_TRAILING_BYTE" />
      <variable citdl="int" name="COMMON_LVB_UNDERSCORE" />
      <variable citdl="int" name="CONSOLE_FULLSCREEN" />
      <variable citdl="int" name="CONSOLE_FULLSCREEN_HARDWARE" />
      <variable citdl="int" name="CONSOLE_FULLSCREEN_MODE" />
      <variable citdl="int" name="CONSOLE_MOUSE_DOWN" />
      <variable citdl="int" name="CONSOLE_MOUSE_SELECTION" />
      <variable citdl="int" name="CONSOLE_NO_SELECTION" />
      <variable citdl="int" name="CONSOLE_SELECTION_IN_PROGRESS" />
      <variable citdl="int" name="CONSOLE_SELECTION_NOT_EMPTY" />
      <variable citdl="int" name="CONSOLE_TEXTMODE_BUFFER" />
      <variable citdl="int" name="CONSOLE_WINDOWED_MODE" />
      <variable citdl="int" name="CTRL_BREAK_EVENT" />
      <variable citdl="int" name="CTRL_C_EVENT" />
      <scope doc="Creates a new console screen buffer" ilk="function" name="CreateConsoleScreenBuffer" />
      <variable citdl="int" name="ENABLE_ECHO_INPUT" />
      <variable citdl="int" name="ENABLE_LINE_INPUT" />
      <variable citdl="int" name="ENABLE_MOUSE_INPUT" />
      <variable citdl="int" name="ENABLE_PROCESSED_INPUT" />
      <variable citdl="int" name="ENABLE_PROCESSED_OUTPUT" />
      <variable citdl="int" name="ENABLE_WINDOW_INPUT" />
      <variable citdl="int" name="ENABLE_WRAP_AT_EOL_OUTPUT" />
      <variable citdl="int" name="FOCUS_EVENT" />
      <variable citdl="int" name="FOREGROUND_BLUE" />
      <variable citdl="int" name="FOREGROUND_GREEN" />
      <variable citdl="int" name="FOREGROUND_INTENSITY" />
      <variable citdl="int" name="FOREGROUND_RED" />
      <scope doc="Detaches process from its console" ilk="function" name="FreeConsole" />
      <scope doc="Sends a control signal to a group of processes attached to a common console" ilk="function" name="GenerateConsoleCtrlEvent" />
      <scope doc="Lists all executables that have console aliases defined" ilk="function" name="GetConsoleAliasExes" />
      <scope doc="Retrieves aliases defined under specified executable" ilk="function" name="GetConsoleAliases" />
      <scope doc="Returns the input code page for calling process&apos;s console" ilk="function" name="GetConsoleCP" />
      <scope doc="Returns the current console&apos;s display mode" ilk="function" name="GetConsoleDisplayMode" />
      <scope doc="Returns the output code page for calling process&apos;s console" ilk="function" name="GetConsoleOutputCP" />
      <scope doc="Returns pids of all processes attached to current console" ilk="function" name="GetConsoleProcessList" />
      <scope doc="Returns info on text selection within the current console" ilk="function" name="GetConsoleSelectionInfo" />
      <scope doc="Returns the title of console to which calling process is attached" ilk="function" name="GetConsoleTitle" />
      <scope doc="Returns a handle to the console&apos;s window, or 0 if none exists" ilk="function" name="GetConsoleWindow" />
      <scope doc="Returns the number of fonts available to the console" ilk="function" name="GetNumberOfConsoleFonts" />
      <scope doc="Returns one of calling process&apos;s standard handles" ilk="function" name="GetStdHandle" />
      <variable citdl="int" name="KEY_EVENT" />
      <variable citdl="int" name="LOCALE_USER_DEFAULT" />
      <variable citdl="int" name="MENU_EVENT" />
      <variable citdl="int" name="MOUSE_EVENT" />
      <scope classrefs="object" doc="Wrapper for a COORD struct. Create using PyCOORDType(X,Y)" ilk="class" name="PyCOORDType" />
      <scope classrefs="object" doc="Handle to a console screen buffer. Create using CreateConsoleScreenBuffer or PyConsoleScreenBufferType(Handle)" ilk="class" name="PyConsoleScreenBufferType" />
      <scope classrefs="object" doc="Wrapper for a INPUT_RECORD struct. Create using PyINPUT_RECORDType(EventType)" ilk="class" name="PyINPUT_RECORDType" />
      <scope classrefs="object" doc="Wrapper for a SMALL_RECT struct. Create using PySMALL_RECTType(Left, Top, Right, Bottom)" ilk="class" name="PySMALL_RECTType" />
      <variable citdl="int" name="STD_ERROR_HANDLE" />
      <variable citdl="int" name="STD_INPUT_HANDLE" />
      <variable citdl="int" name="STD_OUTPUT_HANDLE" />
      <scope doc="Sets the input code page for calling process&apos;s console" ilk="function" name="SetConsoleCP" />
      <scope doc="Sets the output code page for calling process&apos;s console" ilk="function" name="SetConsoleOutputCP" />
      <scope doc="Sets the title of calling process&apos;s console" ilk="function" name="SetConsoleTitle" />
      <variable citdl="int" name="WINDOW_BUFFER_SIZE_EVENT" />
      <scope classrefs="Exception" ilk="class" name="error" />
    </scope>
    