<scope doc="Contains knowledge to build a COM object definition.  This module is used by both the @dynamic@ and @makepy@ modules to build" ilk="blob" lang="Python3" name="win32com.client.build">
      <scope doc="Builds a Python declaration for a method." ilk="function" name="BuildCallList" signature="BuildCallList(fdesc, names, defNamedOptArg, defNamedNotOptArg, defUnnamedArg, defOutArg, is_comment=False)" />
      <scope classrefs="OleItem" ilk="class" name="DispatchItem" />
      <variable citdl="str" name="DropIndirection" />
      <scope classrefs="DispatchItem" doc="# A Lazy dispatch item - builds an item on request using info from # an ITypeComp.  The dynamic module makes the called to build each item, # and also holds the references to the typeinfo and typecomp." ilk="class" name="LazyDispatchItem" />
      <scope doc="# Given a default value passed by a type library, return a string with # an appropriate repr() for the type." ilk="function" name="MakeDefaultArgRepr" signature="MakeDefaultArgRepr(defArgVal)" />
      <scope doc="# Given a &quot;public name&quot; (eg, the name of a class, function, etc) # make sure it is a legal (and reasonable!) Python name." ilk="function" name="MakePublicAttributeName" signature="MakePublicAttributeName(className, is_global=False)" />
      <scope classrefs="object" doc="Simple holder for named attibutes - items in a map." ilk="class" name="MapEntry" />
      <variable citdl="dict" name="NoTranslateMap" />
      <variable citdl="list" name="NoTranslateTypes" />
      <scope classrefs="Exception" ilk="class" name="NotSupportedException" />
      <scope classrefs="object" ilk="class" name="OleItem" />
    </scope>
    