<scope ilk="blob" lang="JavaScript" name="Format.js">
      <variable citdl="Object" name="MochiKit">
        <variable citdl="Object" name="Format">
          <scope doc="Return a locale object for the given locale. locale may be&#xA;either a string, which is looked up in the&#xA;MochiKit.Format.LOCALE object, or a locale object." ilk="function" name="formatLocale" signature="formatLocale(locale=&quot;default&quot;)" />
          <scope doc="Returns a string based on str with leading whitespace&#xA;stripped. If chars is given, then that expression will be&#xA;used instead of whitespace." ilk="function" name="lstrip" returns="String" signature="lstrip(str, chars=&quot;\s&quot;) =&gt; String" />
          <scope doc="Return a function formatNumber(aNumber) that formats numbers&#xA;as a string according to the given pattern, placeholder and&#xA;locale. pattern is a string that describes how the numbers&#xA;should be formatted, for more information see Formatting&#xA;Numbers." ilk="function" name="numberFormatter" returns="Function" signature="numberFormatter(pattern, placeholder=&quot;&quot;, locale=&quot;default&quot;) =&gt; Function" />
          <scope doc="Return a string representation of aNumber * 100, rounded to&#xA;a maximum precision of 2 fractional digits. Roughly&#xA;equivalent to: sprintf(&quot;%.2f%%&quot;, aNumber * 100) In new code,&#xA;you probably want to use: numberFormatter(&quot;#.##%&quot;)(aNumber)&#xA;instead." ilk="function" name="percentFormat" returns="String" signature="percentFormat(aNumber) =&gt; String" />
          <scope doc="Return a string representation of aNumber, rounded to&#xA;precision digits with trailing zeros. This is similar to&#xA;Number.toFixed(aNumber, precision), but this has&#xA;implementation consistent rounding behavior (some versions&#xA;of Safari round 0.5 down!) and also includes preceding 0 for&#xA;numbers less than 1 (Safari, again)." ilk="function" name="roundToFixed" returns="String" signature="roundToFixed(aNumber, precision) =&gt; String" />
          <scope doc="Returns a string based on str with trailing whitespace&#xA;stripped. If chars is given, then that expression will be&#xA;used instead of whitespace." ilk="function" name="rstrip" returns="String" signature="rstrip(str, chars=&quot;\s&quot;) =&gt; String" />
          <scope doc="Returns a string based on str with leading and trailing&#xA;whitespace stripped (equivalent to lstrip(rstrip(str,&#xA;chars), chars)). If chars is given, then that expression&#xA;will be used instead of whitespace." ilk="function" name="strip" returns="String" signature="strip(str, chars=&quot;\s&quot;) =&gt; String" />
          <scope doc="Return a string representation of aNumber, truncated to&#xA;precision digits with trailing zeros. This is similar to&#xA;aNumber.toFixed(precision), but this truncates rather than&#xA;rounds and has implementation consistent behavior for&#xA;numbers less than 1." ilk="function" name="truncToFixed" returns="String" signature="truncToFixed(aNumber, precision) =&gt; String" />
          <scope doc="Calculate an average from a numerator and a denominator and&#xA;return it as a string rounded to a maximum precision of two&#xA;fractional digits (e.g. &quot;1.23&quot;)." ilk="function" name="twoDigitAverage" signature="twoDigitAverage(numerator, denominator)" />
          <scope doc="Return a string representation of aNumber, rounded to a&#xA;maximum precision of 2 fractional digits. This is a&#xA;variation of roundToFixed(aNumber, 2) that removes trailing&#xA;zeros from the fractional part." ilk="function" name="twoDigitFloat" returns="String" signature="twoDigitFloat(aNumber) =&gt; String" />
        </variable>
      </variable>
      <variable citdl="MochiKit.Format.formatLocale" name="formatLocale" />
      <variable citdl="MochiKit.Format.lstrip" name="lstrip" />
      <variable citdl="MochiKit.Format.numberFormatter" name="numberFormatter" />
      <variable citdl="MochiKit.Format.percentFormat" name="percentFormat" />
      <variable citdl="MochiKit.Format.roundToFixed" name="roundToFixed" />
      <variable citdl="MochiKit.Format.rstrip" name="rstrip" />
      <variable citdl="MochiKit.Format.strip" name="strip" />
      <variable citdl="MochiKit.Format.truncToFixed" name="truncToFixed" />
      <variable citdl="MochiKit.Format.twoDigitAverage" name="twoDigitAverage" />
      <variable citdl="MochiKit.Format.twoDigitFloat" name="twoDigitFloat" />
    </scope>
  