<scope doc="# This is part of the Python test suite. # The object is registered when you first run the test suite. # (and hopefully unregistered once done ;-)" ilk="blob" lang="Python3" name="win32com.servers.test_pycomtest">
      <scope classrefs="com_error" doc="An Exception object that is understood by the framework.  If the framework is presented with an exception of type class," ilk="class" name="COMException" />
      <scope classrefs="object" ilk="class" line="19" lineend="152" name="PyCOMTest">
        <variable attributes="protected" citdl="str" line="24" name="_reg_progid_" />
        <variable attributes="protected" citdl="str" line="23" name="_reg_clsid_" />
        <scope ilk="function" line="97" lineend="98" name="Stop" signature="Stop(nID)">
          <variable citdl="PyCOMTest" ilk="argument" name="self" />
          <variable ilk="argument" name="nID" />
        </scope>
        <scope ilk="function" line="67" lineend="68" name="GetSimpleCounter" signature="GetSimpleCounter()">
          <variable citdl="PyCOMTest" ilk="argument" name="self" />
        </scope>
        <scope ilk="function" line="26" lineend="27" name="DoubleString" returns="int" signature="DoubleString(str)">
          <variable citdl="PyCOMTest" ilk="argument" name="self" />
          <variable ilk="argument" name="str" />
        </scope>
        <scope ilk="function" line="70" lineend="71" name="GetSimpleSafeArray" signature="GetSimpleSafeArray(ints)">
          <variable citdl="PyCOMTest" ilk="argument" name="self" />
          <variable ilk="argument" name="ints" />
        </scope>
        <scope ilk="function" line="63" lineend="64" name="GetSetUnknown" signature="GetSetUnknown(inunk)">
          <variable citdl="PyCOMTest" ilk="argument" name="self" />
          <variable ilk="argument" name="inunk" />
        </scope>
        <scope ilk="function" line="147" lineend="148" name="SetULongProp" signature="SetULongProp(val)">
          <variable citdl="PyCOMTest" ilk="argument" name="self" />
          <variable ilk="argument" name="val" />
        </scope>
        <scope ilk="function" line="94" lineend="95" name="Start" signature="Start()">
          <variable citdl="PyCOMTest" ilk="argument" name="self" />
        </scope>
        <variable attributes="protected" citdl="list" line="22" name="_com_interfaces_" />
        <scope ilk="function" line="109" lineend="110" name="Test" returns="bool" signature="Test(key, inval)">
          <variable citdl="PyCOMTest" ilk="argument" name="self" />
          <variable ilk="argument" name="key" />
          <variable ilk="argument" name="inval" />
        </scope>
        <scope ilk="function" line="135" lineend="136" name="TestOptionals2" signature="TestOptionals2(dval, strval=&apos;&apos;, sval=1)">
          <variable citdl="PyCOMTest" ilk="argument" name="self" />
          <variable ilk="argument" name="dval" />
          <variable citdl="str" ilk="argument" name="strval" />
          <variable citdl="int" ilk="argument" name="sval" />
        </scope>
        <scope ilk="function" line="151" lineend="152" name="SetIntProp" signature="SetIntProp(val)">
          <variable citdl="PyCOMTest" ilk="argument" name="self" />
          <variable ilk="argument" name="val" />
        </scope>
        <scope ilk="function" line="28" lineend="29" name="DoubleInOutString" returns="int" signature="DoubleInOutString(str)">
          <variable citdl="PyCOMTest" ilk="argument" name="self" />
          <variable ilk="argument" name="str" />
        </scope>
        <variable attributes="__instancevar__" line="152" name="intval" />
        <scope ilk="function" line="73" lineend="74" name="GetStruct" signature="GetStruct()">
          <variable citdl="PyCOMTest" ilk="argument" name="self" />
        </scope>
        <scope ilk="function" line="31" lineend="32" name="Fire" signature="Fire(nID)">
          <variable citdl="PyCOMTest" ilk="argument" name="self" />
          <variable ilk="argument" name="nID" />
        </scope>
        <variable attributes="protected" citdl="str" line="20" name="_typelib_guid_" />
        <scope ilk="function" line="50" lineend="51" name="GetSetVariant" signature="GetSetVariant(indisp)">
          <variable citdl="PyCOMTest" ilk="argument" name="self" />
          <variable ilk="argument" name="indisp" />
        </scope>
        <scope ilk="function" line="43" lineend="44" name="GetSetDispatch" signature="GetSetDispatch(indisp)">
          <variable citdl="PyCOMTest" ilk="argument" name="self" />
          <variable ilk="argument" name="indisp" />
        </scope>
        <scope ilk="function" line="143" lineend="144" name="SetLongProp" signature="SetLongProp(val)">
          <variable citdl="PyCOMTest" ilk="argument" name="self" />
          <variable ilk="argument" name="val" />
        </scope>
        <scope ilk="function" line="56" lineend="57" name="TestByRefString" returns="int" signature="TestByRefString(v)">
          <variable citdl="PyCOMTest" ilk="argument" name="self" />
          <variable ilk="argument" name="v" />
        </scope>
        <scope ilk="function" line="149" lineend="150" name="IntProp" returns="self.intval" signature="IntProp()">
          <variable citdl="PyCOMTest" ilk="argument" name="self" />
        </scope>
        <scope ilk="function" line="103" lineend="104" name="TakeByRefDispatch" signature="TakeByRefDispatch(inout)">
          <variable citdl="PyCOMTest" ilk="argument" name="self" />
          <variable ilk="argument" name="inout" />
        </scope>
        <scope ilk="function" line="100" lineend="101" name="StopAll" signature="StopAll()">
          <variable citdl="PyCOMTest" ilk="argument" name="self" />
        </scope>
        <scope ilk="function" line="145" lineend="146" name="ULongProp" returns="self.ulongval" signature="ULongProp()">
          <variable citdl="PyCOMTest" ilk="argument" name="self" />
        </scope>
        <variable attributes="__instancevar__" line="144" name="longval" />
        <scope ilk="function" line="91" lineend="92" name="SetVariantSafeArray" signature="SetVariantSafeArray(vars)">
          <variable citdl="PyCOMTest" ilk="argument" name="self" />
          <variable ilk="argument" name="vars" />
        </scope>
        <scope ilk="function" line="34" lineend="35" name="GetLastVarArgs" signature="GetLastVarArgs()">
          <variable citdl="PyCOMTest" ilk="argument" name="self" />
        </scope>
        <scope ilk="function" line="106" lineend="107" name="TakeByRefTypedDispatch" signature="TakeByRefTypedDispatch(inout)">
          <variable citdl="PyCOMTest" ilk="argument" name="self" />
          <variable ilk="argument" name="inout" />
        </scope>
        <scope ilk="function" line="85" lineend="86" name="SetBinSafeArray" returns="len()" signature="SetBinSafeArray(buf)">
          <variable citdl="PyCOMTest" ilk="argument" name="self" />
          <variable ilk="argument" name="buf" />
        </scope>
        <scope ilk="function" line="132" lineend="133" name="TestOptionals" signature="TestOptionals(strArg=&apos;def&apos;, sval=0, lval=1, dval=3.1400001049041748)">
          <variable citdl="PyCOMTest" ilk="argument" name="self" />
          <variable citdl="str" ilk="argument" name="strArg" />
          <variable citdl="int" ilk="argument" name="sval" />
          <variable citdl="int" ilk="argument" name="lval" />
          <variable citdl="float" ilk="argument" name="dval" />
        </scope>
        <scope ilk="function" line="40" lineend="41" name="GetSafeArrays" signature="GetSafeArrays(attrs, attrs2, ints)">
          <variable citdl="PyCOMTest" ilk="argument" name="self" />
          <variable ilk="argument" name="attrs" />
          <variable ilk="argument" name="attrs2" />
          <variable ilk="argument" name="ints" />
        </scope>
        <scope ilk="function" line="141" lineend="142" name="LongProp" returns="self.longval" signature="LongProp()">
          <variable citdl="PyCOMTest" ilk="argument" name="self" />
        </scope>
        <variable attributes="protected" citdl="tuple" line="21" name="_typelib_version" />
        <scope ilk="function" line="60" lineend="61" name="GetSetInterfaceArray" signature="GetSetInterfaceArray(ininterface)">
          <variable citdl="PyCOMTest" ilk="argument" name="self" />
          <variable ilk="argument" name="ininterface" />
        </scope>
        <scope ilk="function" line="115" lineend="116" name="Test3" signature="Test3(inval)">
          <variable citdl="PyCOMTest" ilk="argument" name="self" />
          <variable ilk="argument" name="inval" />
        </scope>
        <scope ilk="function" line="112" lineend="113" name="Test2" signature="Test2(inval)">
          <variable citdl="PyCOMTest" ilk="argument" name="self" />
          <variable ilk="argument" name="inval" />
        </scope>
        <scope ilk="function" line="121" lineend="127" name="Test5" returns="constants.TestAttr1" signature="Test5(inout)">
          <variable citdl="PyCOMTest" ilk="argument" name="self" />
          <variable ilk="argument" name="inout" />
        </scope>
        <scope ilk="function" line="118" lineend="119" name="Test4" signature="Test4(inval)">
          <variable citdl="PyCOMTest" ilk="argument" name="self" />
          <variable ilk="argument" name="inval" />
        </scope>
        <scope ilk="function" line="79" lineend="80" name="SetLongLongSafeArray" returns="len()" signature="SetLongLongSafeArray(ints)">
          <variable citdl="PyCOMTest" ilk="argument" name="self" />
          <variable ilk="argument" name="ints" />
        </scope>
        <scope ilk="function" line="129" lineend="130" name="Test6" signature="Test6(inval)">
          <variable citdl="PyCOMTest" ilk="argument" name="self" />
          <variable ilk="argument" name="inval" />
        </scope>
        <scope ilk="function" line="138" lineend="139" name="CheckVariantSafeArray" returns="int" signature="CheckVariantSafeArray(data)">
          <variable citdl="PyCOMTest" ilk="argument" name="self" />
          <variable ilk="argument" name="data" />
        </scope>
        <variable attributes="__instancevar__" line="148" name="ulongval" />
        <scope ilk="function" line="47" lineend="48" name="GetSetInterface" returns="wrap()" signature="GetSetInterface(ininterface)">
          <variable citdl="PyCOMTest" ilk="argument" name="self" />
          <variable ilk="argument" name="ininterface" />
        </scope>
        <scope ilk="function" line="82" lineend="83" name="SetULongLongSafeArray" returns="len()" signature="SetULongLongSafeArray(ints)">
          <variable citdl="PyCOMTest" ilk="argument" name="self" />
          <variable ilk="argument" name="ints" />
        </scope>
        <scope ilk="function" line="37" lineend="38" name="GetMultipleInterfaces" signature="GetMultipleInterfaces(outinterface1, outinterface2)">
          <variable citdl="PyCOMTest" ilk="argument" name="self" />
          <variable ilk="argument" name="outinterface1" />
          <variable ilk="argument" name="outinterface2" />
        </scope>
        <scope ilk="function" line="88" lineend="89" name="SetVarArgs" signature="SetVarArgs(*args)">
          <variable citdl="PyCOMTest" ilk="argument" name="self" />
          <variable attributes="varargs" ilk="argument" name="args" />
        </scope>
        <scope ilk="function" line="76" lineend="77" name="SetIntSafeArray" returns="len()" signature="SetIntSafeArray(ints)">
          <variable citdl="PyCOMTest" ilk="argument" name="self" />
          <variable ilk="argument" name="ints" />
        </scope>
        <scope ilk="function" line="53" lineend="54" name="TestByRefVariant" returns="int" signature="TestByRefVariant(v)">
          <variable citdl="PyCOMTest" ilk="argument" name="self" />
          <variable ilk="argument" name="v" />
        </scope>
      </scope>
      <scope classrefs="PyCOMTest" ilk="class" line="154" lineend="163" name="PyCOMTestMI">
        <variable attributes="protected" citdl="str" line="163" name="_reg_progid_" />
        <variable attributes="protected" citdl="str" line="155" name="_typelib_guid_" />
        <variable attributes="protected" citdl="str" line="162" name="_reg_clsid_" />
        <variable attributes="protected" citdl="list" line="158" name="_com_interfaces_" />
        <variable attributes="protected" citdl="tuple" line="156" name="_typelib_version" />
      </scope>
      <variable citdl="Constants" name="constants" />
      <import module="gencache" />
      <import module="pythoncom" />
      <import module="universal" />
      <import module="winerror" />
      <scope doc="Wraps an object in a PyGDispatch gateway." ilk="function" name="wrap" signature="wrap(ob, iid=None, usePolicy=None, useDispatcher=None)" />
    </scope>
    