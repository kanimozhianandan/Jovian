<scope doc="Support for dynamic COM client support.  Introduction" ilk="blob" lang="Python3" name="win32com.client.dynamic">
      <variable citdl="list" line="46" name="ALL_INVOKE_TYPES" />
      <scope classrefs="object" ilk="class" line="161" lineend="566" name="CDispatch">
        <scope ilk="function" line="212" lineend="213" name="__int__" returns="int()" signature="__int__()">
          <variable citdl="CDispatch" ilk="argument" name="self" />
        </scope>
        <scope attributes="protected" ilk="function" line="221" lineend="228" name="_NewEnum" returns="util.WrapEnum()" signature="_NewEnum()">
          <import line="227" module="." symbol="util" />
          <variable citdl="CDispatch" ilk="argument" name="self" />
          <variable citdl="int" line="223" name="invkind" />
          <variable citdl="self._oleobj_.InvokeTypes()" line="224" name="enum" />
        </scope>
        <scope ilk="function" line="430" lineend="432" name="__AttrToID__" returns="self._oleobj_.GetIDsOfNames()" signature="__AttrToID__(attr)">
          <variable citdl="CDispatch" ilk="argument" name="self" />
          <variable ilk="argument" name="attr" />
        </scope>
        <scope ilk="function" line="193" lineend="201" name="__str__" returns="CDispatch.__repr__()" signature="__str__()">
          <variable citdl="CDispatch" ilk="argument" name="self" />
        </scope>
        <scope attributes="protected" ilk="function" line="275" lineend="278" name="_wrap_dispatch_" returns="Dispatch()" signature="_wrap_dispatch_(ob, userName=None, returnCLSID=None, UnicodeToString=None)">
          <variable citdl="CDispatch" ilk="argument" name="self" />
          <variable ilk="argument" name="ob" />
          <variable ilk="argument" name="userName" />
          <variable ilk="argument" name="returnCLSID" />
          <variable ilk="argument" name="UnicodeToString" />
        </scope>
        <scope ilk="function" line="371" lineend="377" name="__LazyMap__" returns="int" signature="__LazyMap__(attr)">
          <variable citdl="CDispatch" ilk="argument" name="self" />
          <variable ilk="argument" name="attr" />
        </scope>
        <scope attributes="__ctor__" ilk="function" line="162" lineend="172" name="__init__" signature="CDispatch(IDispatch, olerepr, userName=None, UnicodeToString=None, lazydata=None)">
          <variable citdl="CDispatch" ilk="argument" name="self" />
          <variable ilk="argument" name="IDispatch" />
          <variable ilk="argument" name="olerepr" />
          <variable citdl="str" ilk="argument" name="userName" />
          <variable ilk="argument" name="UnicodeToString" />
          <variable ilk="argument" name="lazydata" />
        </scope>
        <scope ilk="function" line="514" lineend="566" name="__setattr__" signature="__setattr__(attr, value)">
          <variable citdl="CDispatch" ilk="argument" name="self" />
          <variable ilk="argument" name="attr" />
          <variable ilk="argument" name="value" />
          <variable citdl="build.MapEntry()" line="526" name="entry" />
          <variable citdl="_GetDescInvokeType()" line="527" name="invoke_type" />
        </scope>
        <scope attributes="protected" doc="Given an object (usually the retval from a method), make it a good object to return." ilk="function" line="293" lineend="302" name="_get_good_object_" returns="tuple()" signature="_get_good_object_(ob, userName=None, ReturnCLSID=None)">
          <variable citdl="CDispatch" ilk="argument" name="self" />
          <variable ilk="argument" name="ob" />
          <variable ilk="argument" name="userName" />
          <variable ilk="argument" name="ReturnCLSID" />
        </scope>
        <scope ilk="function" line="434" lineend="512" name="__getattr__" returns="CDispatch._make_method_()" signature="__getattr__(attr)">
          <variable citdl="CDispatch" ilk="argument" name="self" />
          <variable ilk="argument" name="attr" />
          <variable citdl="int" line="439" name="invkind" />
          <variable citdl="self._oleobj_.InvokeTypes()" line="440" name="enum" />
          <scope ilk="class" line="444" lineend="449" name="Factory">
            <scope attributes="__ctor__" ilk="function" line="445" lineend="446" name="__init__" signature="Factory(ob)">
              <variable citdl="Factory" ilk="argument" name="self" />
              <variable ilk="argument" name="ob" />
            </scope>
            <variable attributes="__instancevar__" line="446" name="ob" />
            <scope ilk="function" line="447" lineend="449" name="__call__" returns="win32com.client.util.Iterator()" signature="__call__()">
              <import line="448" module="win32com.client.util" />
              <variable citdl="Factory" ilk="argument" name="self" />
            </scope>
          </scope>
          <variable citdl="self._olerepr_.propMapGet.get()" line="469" name="retEntry" />
          <variable citdl="self._oleobj_.Invoke()" line="490" name="ret" />
          <variable citdl="_GetDescInvokeType()" line="498" name="invoke_type" />
        </scope>
        <scope attributes="protected" doc="Flag these attribute names as being methods." ilk="function" line="414" lineend="428" name="_FlagAsMethod" signature="_FlagAsMethod(*methodNames)">
          <variable citdl="CDispatch" ilk="argument" name="self" />
          <variable attributes="varargs" ilk="argument" name="methodNames" />
          <variable citdl="build.MapEntry()" line="427" name="details" />
        </scope>
        <scope doc="Provide &apos;default dispatch&apos; COM functionality - allow instance to be called" ilk="function" line="174" lineend="183" name="__call__" returns="self._get_good_object_()" signature="__call__(*args)">
          <variable citdl="CDispatch" ilk="argument" name="self" />
          <variable attributes="varargs" ilk="argument" name="args" />
          <variable citdl="int" line="179" name="invkind" />
          <variable citdl="pythoncom.DISPID_VALUE" line="179" name="dispid" />
          <variable citdl="tuple" line="181" name="allArgs" />
        </scope>
        <scope attributes="protected" ilk="function" line="271" lineend="273" name="_ApplyTypes_" returns="self._get_good_object_()" signature="_ApplyTypes_(dispid, wFlags, retType, argTypes, user, resultCLSID, *args)">
          <variable citdl="CDispatch" ilk="argument" name="self" />
          <variable ilk="argument" name="dispid" />
          <variable ilk="argument" name="wFlags" />
          <variable ilk="argument" name="retType" />
          <variable ilk="argument" name="argTypes" />
          <variable ilk="argument" name="user" />
          <variable ilk="argument" name="resultCLSID" />
          <variable attributes="varargs" ilk="argument" name="args" />
          <variable citdl="self._oleobj_.InvokeTypes()" line="272" name="result" />
        </scope>
        <scope attributes="protected" doc="Debug routine - dumps what it knows about an object." ilk="function" line="352" lineend="369" name="_print_details_" signature="_print_details_()">
          <variable citdl="CDispatch" ilk="argument" name="self" />
        </scope>
        <scope ilk="function" line="215" lineend="219" name="__len__" returns="self._oleobj_.Invoke()" signature="__len__()">
          <variable citdl="CDispatch" ilk="argument" name="self" />
        </scope>
        <scope attributes="protected" doc="Call the named method as a procedure, rather than function." ilk="function" line="342" lineend="350" name="_proc_" returns="CDispatch._get_good_object_()" signature="_proc_(name, *args)">
          <variable citdl="CDispatch" ilk="argument" name="self" />
          <variable ilk="argument" name="name" />
          <variable attributes="varargs" ilk="argument" name="args" />
          <variable line="346" name="item" />
          <variable citdl="item.dispid" line="347" name="dispId" />
        </scope>
        <scope ilk="function" line="208" lineend="210" name="__ne__" returns="bool" signature="__ne__(other)">
          <variable citdl="CDispatch" ilk="argument" name="self" />
          <variable citdl="getattr()" ilk="argument" name="other" />
        </scope>
        <scope ilk="function" line="230" lineend="242" name="__getitem__" returns="self._get_good_object_()" signature="__getitem__(index)">
          <variable citdl="CDispatch" ilk="argument" name="self" />
          <variable ilk="argument" name="index" />
        </scope>
        <variable attributes="protected __instancevar__" line="340" name="_enum_" />
        <scope ilk="function" line="244" lineend="254" name="__setitem__" returns="self._get_good_object_()" signature="__setitem__(index, *args)">
          <variable citdl="CDispatch" ilk="argument" name="self" />
          <variable ilk="argument" name="index" />
          <variable attributes="varargs" ilk="argument" name="args" />
          <variable citdl="int" line="250" name="invkind" />
          <variable citdl="pythoncom.DISPID_VALUE" line="250" name="dispid" />
          <variable citdl="tuple" line="252" name="allArgs" />
        </scope>
        <scope attributes="protected" ilk="function" line="280" lineend="291" name="_get_good_single_object_" returns="CDispatch._wrap_dispatch_()" signature="_get_good_single_object_(ob, userName=None, ReturnCLSID=None)">
          <variable citdl="CDispatch" ilk="argument" name="self" />
          <variable citdl="ob.QueryInterface()" ilk="argument" name="ob" />
          <variable ilk="argument" name="userName" />
          <variable ilk="argument" name="ReturnCLSID" />
        </scope>
        <scope ilk="function" line="185" lineend="186" name="__bool__" returns="bool" signature="__bool__()">
          <variable citdl="CDispatch" ilk="argument" name="self" />
        </scope>
        <scope attributes="protected" doc="Make a method object - Assumes in olerepr funcmap" ilk="function" line="304" lineend="327" name="_make_method_" returns="MakeMethod()" signature="_make_method_(name)">
          <variable citdl="CDispatch" ilk="argument" name="self" />
          <variable citdl="build.MakePublicAttributeName()" ilk="argument" name="name" />
          <variable citdl="build.MakePublicAttributeName()" line="306" name="methodName" />
          <variable citdl="self._olerepr_.MakeFuncMethod()" line="307" name="methodCodeList" />
          <variable citdl="__builtins__.str.join()" line="308" name="methodCode" />
          <variable citdl="compile()" line="312" name="codeObject" />
          <variable citdl="dict" line="314" name="tempNameSpace" />
          <variable line="316" name="globNameSpace" />
          <variable line="321" name="fn" />
          <variable citdl="MakeMethod()" line="322" name="newMeth" />
        </scope>
        <scope ilk="function" line="204" lineend="206" name="__eq__" returns="bool" signature="__eq__(other)">
          <variable citdl="CDispatch" ilk="argument" name="self" />
          <variable citdl="getattr()" ilk="argument" name="other" />
        </scope>
        <scope attributes="protected" ilk="function" line="380" lineend="412" name="_LazyAddAttr_" returns="int" signature="_LazyAddAttr_(attr)">
          <variable citdl="CDispatch" ilk="argument" name="self" />
          <variable ilk="argument" name="attr" />
          <variable citdl="int" line="382" name="res" />
          <variable citdl="self._olerepr_" line="384" name="olerepr" />
          <variable citdl="olerepr._AddVar_()" line="397" name="r" />
          <variable line="403" name="map" />
          <variable line="403" name="key" />
          <variable line="404" name="item" />
        </scope>
        <scope attributes="protected" doc="Cleanup object - like a close - to force cleanup when you dont want to rely on Python&apos;s reference counting." ilk="function" line="329" lineend="340" name="_Release_" signature="_Release_()">
          <variable citdl="CDispatch" ilk="argument" name="self" />
        </scope>
        <scope ilk="function" line="190" lineend="191" name="__repr__" returns="str" signature="__repr__()">
          <variable citdl="CDispatch" ilk="argument" name="self" />
        </scope>
        <variable attributes="protected __instancevar__" citdl="dict" line="334" name="_mapCachedItems_" />
        <scope attributes="protected" ilk="function" line="256" lineend="269" name="_find_dispatch_type_" returns="tuple" signature="_find_dispatch_type_(methodName)">
          <variable citdl="CDispatch" ilk="argument" name="self" />
          <variable ilk="argument" name="methodName" />
          <variable line="258" name="item" />
          <variable citdl="self._oleobj_.GetIDsOfNames()" line="266" name="dispid" />
        </scope>
      </scope>
      <scope ilk="function" line="110" lineend="129" name="Dispatch" returns="Dispatch.createClass()" signature="Dispatch(IDispatch, userName=None, createClass=None, typeinfo=None, UnicodeToString=None, clsctx=21)">
        <variable ilk="argument" name="userName" />
        <variable ilk="argument" name="IDispatch" />
        <variable citdl="IDispatch.GetTypeInfo()" ilk="argument" name="typeinfo" />
        <variable citdl="MakeOleRepr()" line="128" name="olerepr" />
        <variable citdl="pythoncom.CLSCTX_SERVER" ilk="argument" name="clsctx" />
        <variable citdl="typeinfo.GetTypeComp()" line="122" name="typecomp" />
        <variable ilk="argument" name="UnicodeToString" />
        <variable citdl="tuple" line="115" name="lazydata" />
        <variable citdl="CDispatch" ilk="argument" name="createClass" />
      </scope>
      <scope doc="Dispatch with no type info" ilk="function" line="153" lineend="159" name="DumbDispatch" returns="DumbDispatch.createClass()" signature="DumbDispatch(IDispatch, userName=None, createClass=None, UnicodeToString=None, clsctx=21)">
        <variable ilk="argument" name="userName" />
        <variable ilk="argument" name="IDispatch" />
        <variable citdl="pythoncom.CLSCTX_SERVER" ilk="argument" name="clsctx" />
        <variable ilk="argument" name="UnicodeToString" />
        <variable citdl="CDispatch" ilk="argument" name="createClass" />
      </scope>
      <variable citdl="list" line="38" name="ERRORS_BAD_CONTEXT" />
      <scope classrefs="object" ilk="class" name="IIDType" />
      <variable citdl="int" line="33" name="LCID" />
      <scope ilk="function" line="67" name="MakeMethod" signature="MakeMethod(func, inst, cls)" />
      <scope ilk="function" line="131" lineend="151" name="MakeOleRepr" returns="build.DispatchItem()" signature="MakeOleRepr(IDispatch, typeinfo, typecomp)">
        <variable ilk="argument" name="IDispatch" />
        <variable citdl="typeinfo.GetRefTypeInfo()" ilk="argument" name="typeinfo" />
        <variable citdl="typeinfo.GetTypeAttr()" line="135" name="attr" />
        <variable citdl="build.DispatchItem()" line="132" name="olerepr" />
        <variable ilk="argument" name="typecomp" />
        <variable citdl="typeinfo.GetRefTypeOfImplType()" line="141" name="href" />
      </scope>
      <import module="build" />
      <scope ilk="function" line="59" lineend="63" name="debug_attr_print" signature="debug_attr_print(*args)">
        <variable attributes="varargs" ilk="argument" name="args" />
      </scope>
      <scope ilk="function" line="53" lineend="57" name="debug_print" signature="debug_print(*args)">
        <variable attributes="varargs" ilk="argument" name="args" />
      </scope>
      <variable citdl="int" line="30" name="debugging" />
      <variable citdl="int" line="31" name="debugging_attr" />
      <scope classrefs="PyIUnknown" ilk="class" line="73" name="dispatchType" />
      <scope classrefs="interface-type" ilk="class" line="74" name="iunkType" />
      <import module="pythoncom" />
      <import module="sys" />
      <import module="traceback" />
      <import module="types" />
      <import module="win32com" />
      <import module="winerror" />
      <scope attributes="protected __hidden__" ilk="function" line="79" lineend="88" name="_GetGoodDispatch" returns="pythoncom.CoCreateInstance()" signature="_GetGoodDispatch(IDispatch, clsctx=pythoncom.CLSCTX_SERVER)">
        <variable citdl="pythoncom.CoCreateInstance()" ilk="argument" name="IDispatch" />
        <variable citdl="pythoncom.CLSCTX_SERVER" ilk="argument" name="clsctx" />
      </scope>
      <variable attributes="protected __hidden__" citdl="build.DispatchItem" line="77" name="_defaultDispatchItem" />
      <scope attributes="protected __hidden__" ilk="function" line="106" lineend="108" name="_GetDescInvokeType" signature="_GetDescInvokeType(entry, default_invoke_type)">
        <variable ilk="argument" name="entry" />
        <variable ilk="argument" name="default_invoke_type" />
      </scope>
      <variable attributes="protected __hidden__" citdl="tuple" line="76" name="_GoodDispatchTypes" />
      <scope attributes="protected __hidden__" ilk="function" line="90" lineend="104" name="_GetGoodDispatchAndUserName" returns="tuple" signature="_GetGoodDispatchAndUserName(IDispatch, userName, clsctx)">
        <variable ilk="argument" name="IDispatch" />
        <variable citdl="str()" ilk="argument" name="userName" />
        <variable ilk="argument" name="clsctx" />
      </scope>
    </scope>
    