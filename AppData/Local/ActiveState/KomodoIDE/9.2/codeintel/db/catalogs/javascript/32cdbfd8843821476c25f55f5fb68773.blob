<scope ilk="blob" lang="JavaScript" name="Logging.js">
      <variable citdl="Object" name="MochiKit">
        <variable citdl="Object" name="Logging">
          <scope doc="Properties: num: Identifier for the log message level: Level&#xA;of the log message (&quot;INFO&quot;, &quot;WARN&quot;, &quot;DEBUG&quot;, etc.) info: All&#xA;other arguments passed to log function as an Array&#xA;timestamp: Date object timestamping the log message&#xA;Availability: Available in MochiKit 1.3.1+" ilk="class" name="LogMessage">
            <scope attributes="__ctor__" doc="Properties: num: Identifier for the log message level: Level&#xA;of the log message (&quot;INFO&quot;, &quot;WARN&quot;, &quot;DEBUG&quot;, etc.) info: All&#xA;other arguments passed to log function as an Array&#xA;timestamp: Date object timestamping the log message&#xA;Availability: Available in MochiKit 1.3.1+" ilk="function" name="LogMessage" signature="LogMessage(num, level, info)" />
          </scope>
          <scope doc="A basic logger object that has a buffer of recent messages&#xA;plus a listener dispatch mechanism for &quot;real-time&quot; logging&#xA;of important messages. maxSize is the maximum number of&#xA;entries in the log." ilk="class" name="Logger">
            <scope attributes="__ctor__" doc="A basic logger object that has a buffer of recent messages&#xA;plus a listener dispatch mechanism for &quot;real-time&quot; logging&#xA;of important messages. maxSize is the maximum number of&#xA;entries in the log." ilk="function" name="Logger" signature="Logger([maxSize])" />
            <scope doc="Add a listener for log messages. ident is a unique&#xA;identifier that may be used to remove the listener later on." ilk="function" name="addListener" signature="addListener(ident, filter, listener)" />
            <scope doc="The base functionality behind all of the log functions. The&#xA;first argument is the log level as a string or number, and&#xA;all other arguments are used as the info list." ilk="function" name="baseLog" signature="baseLog(level, message[, ...])" />
            <scope doc="Clear all messages from the message buffer." ilk="function" name="clear" signature="clear()" />
            <scope doc="Display the contents of the logger in a useful way for&#xA;browsers. Currently, if MochiKit.LoggingPane is loaded, then&#xA;a pop-up MochiKit.LoggingPane.LoggingPane will be used." ilk="function" name="debuggingBookmarklet" signature="debuggingBookmarklet()" />
            <scope doc="Dispatch a log message to all listeners." ilk="function" name="dispatchListeners" signature="dispatchListeners(msg)" />
            <scope doc="Returns a list of messages from the message buffer, ordered&#xA;from the oldest to the newest message. If howMany is&#xA;specified, only the last howMany messages are returned." ilk="function" name="getMessages" signature="getMessages([howMany])" />
            <scope doc="Get a string representing up to the last howMany messages in&#xA;the message buffer. The default is 30." ilk="function" name="getMessageText" signature="getMessageText([howMany])" />
            <scope doc="Remove a listener using the ident given to&#xA;Logger.prototype.addListener Availability: Available in&#xA;MochiKit 1.3.1+" ilk="function" name="removeListener" signature="removeListener(ident)" />
          </scope>
          <scope doc="Ultra-obnoxious alert(...) listener Availability: Available&#xA;in MochiKit 1.3.1+" ilk="function" name="alertListener" signature="alertListener(msg)" />
          <scope doc="Log an INFO message to the default logger Availability:&#xA;Available in MochiKit 1.3.1+" ilk="function" name="log" signature="log(message[, info[, ...]])" />
          <scope doc="Log a DEBUG message to the default logger Availability:&#xA;Available in MochiKit 1.3.1+" ilk="function" name="logDebug" signature="logDebug(message[, info[, ...]])" />
          <scope doc="Log an ERROR message to the default logger Availability:&#xA;Available in MochiKit 1.3.1+" ilk="function" name="logError" signature="logError(message[, info[, ...]])" />
          <scope doc="Log a FATAL message to the default logger Availability:&#xA;Available in MochiKit 1.3.1+" ilk="function" name="logFatal" signature="logFatal(message[, info[, ...]])" />
          <scope doc="Return a function that will match log messages whose level&#xA;is at least minLevel Availability: Available in MochiKit&#xA;1.3.1+" ilk="function" name="logLevelAtLeast" returns="Function" signature="logLevelAtLeast(minLevel) =&gt; Function" />
          <scope doc="Log a WARNING message to the default logger Availability:&#xA;Available in MochiKit 1.3.1+" ilk="function" name="logWarning" signature="logWarning(message[, info[, ...]])" />
        </variable>
      </variable>
      <variable citdl="MochiKit.Logging.LogMessage" name="LogMessage" />
      <variable citdl="MochiKit.Logging.Logger" name="Logger" />
      <variable citdl="MochiKit.Logging.addListener" name="addListener" />
      <variable citdl="MochiKit.Logging.baseLog" name="baseLog" />
      <variable citdl="MochiKit.Logging.clear" name="clear" />
      <variable citdl="MochiKit.Logging.debuggingBookmarklet" name="debuggingBookmarklet" />
      <variable citdl="MochiKit.Logging.dispatchListeners" name="dispatchListeners" />
      <variable citdl="MochiKit.Logging.getMessages" name="getMessages" />
      <variable citdl="MochiKit.Logging.getMessageText" name="getMessageText" />
      <variable citdl="MochiKit.Logging.removeListener" name="removeListener" />
      <variable citdl="MochiKit.Logging.alertListener" name="alertListener" />
      <variable citdl="MochiKit.Logging.log" name="log" />
      <variable citdl="MochiKit.Logging.logDebug" name="logDebug" />
      <variable citdl="MochiKit.Logging.logError" name="logError" />
      <variable citdl="MochiKit.Logging.logFatal" name="logFatal" />
      <variable citdl="MochiKit.Logging.logLevelAtLeast" name="logLevelAtLeast" />
      <variable citdl="MochiKit.Logging.logWarning" name="logWarning" />
    </scope>
  