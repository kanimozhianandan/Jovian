<scope doc="Python.Interpreter COM Server  This module implements a very very simple COM server which" ilk="blob" lang="Python" name="win32com.servers.interp">
      <scope classrefs="com_error" doc="An Exception object that is understood by the framework.  If the framework is presented with an exception of type class," ilk="class" name="Exception" />
      <scope doc="The interpreter object exposed via COM" ilk="class" line="18" lineend="44" name="Interpreter">
        <variable attributes="protected" citdl="str" line="24" name="_reg_progid_" />
        <scope doc="Evaluate an expression." ilk="function" line="32" lineend="38" name="Eval" returns="eval()" signature="Eval(exp)">
          <variable citdl="Interpreter" ilk="argument" name="self" />
          <variable ilk="argument" name="exp" />
        </scope>
        <variable attributes="protected" citdl="list" line="21" name="_public_methods_" />
        <variable attributes="protected" citdl="str" line="26" name="_reg_clsid_" />
        <scope doc="Execute a statement." ilk="function" line="39" lineend="44" name="Exec" signature="Exec(exp)">
          <variable citdl="Interpreter" ilk="argument" name="self" />
          <variable ilk="argument" name="exp" />
        </scope>
        <variable attributes="protected" citdl="str" line="25" name="_reg_desc_" />
        <variable attributes="protected" citdl="str" line="27" name="_reg_class_spec_" />
        <variable attributes="__instancevar__" citdl="dict" line="30" name="dict" />
        <variable attributes="protected" citdl="str" line="23" name="_reg_verprogid_" />
        <scope attributes="__ctor__" ilk="function" line="29" lineend="30" name="__init__" signature="Interpreter()">
          <variable citdl="Interpreter" ilk="argument" name="self" />
        </scope>
      </scope>
      <scope ilk="function" line="46" lineend="48" name="Register" returns="win32com.server.register.UseCommandLine()" signature="Register()" />
      <import module="winerror" />
    </scope>
    