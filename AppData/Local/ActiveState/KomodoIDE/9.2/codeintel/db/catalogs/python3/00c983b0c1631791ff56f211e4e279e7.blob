<scope doc="Skeleton replacement for removed dbi module. Use of objects created by this module should be replaced with native Python objects. Dates are now returned as datetime.datetime objects, but will still accept PyTime" ilk="blob" lang="Python3" name="dbi">
      <variable citdl="str" name="DATE" />
      <variable citdl="str" name="NUMBER" />
      <variable citdl="str" name="RAW" />
      <scope ilk="function" name="SQLDataSources" />
      <variable citdl="int" name="SQL_FETCH_ABSOLUTE" />
      <variable citdl="int" name="SQL_FETCH_FIRST" />
      <variable citdl="int" name="SQL_FETCH_FIRST_SYSTEM" />
      <variable citdl="int" name="SQL_FETCH_FIRST_USER" />
      <variable citdl="int" name="SQL_FETCH_LAST" />
      <variable citdl="int" name="SQL_FETCH_NEXT" />
      <variable citdl="int" name="SQL_FETCH_PRIOR" />
      <variable citdl="int" name="SQL_FETCH_RELATIVE" />
      <variable citdl="str" name="STRING" />
      <variable citdl="tuple" name="TYPES" />
      <variable citdl="dict" name="__warningregistry__" />
      <scope classrefs="Exception" ilk="class" name="dataError" />
      <import module="datetime" />
      <scope classrefs="date" doc="datetime(year, month, day[, hour[, minute[, second[, microsecond[,tzinfo]]]]])  The year, month and day arguments are required. tzinfo may be None, or an" ilk="class" line="16" name="dbDate" />
      <scope classrefs="object" doc="memoryview(object)  Create a new memoryview object which references the given object." ilk="class" line="19" name="dbRaw" />
      <scope classrefs="date" doc="datetime(year, month, day[, hour[, minute[, second[, microsecond[,tzinfo]]]]])  The year, month and day arguments are required. tzinfo may be None, or an" ilk="class" name="dbiDate" />
      <scope classrefs="object" doc="memoryview(object)  Create a new memoryview object which references the given object." ilk="class" name="dbiRaw" />
      <scope classrefs="Exception" ilk="class" name="error" />
      <scope classrefs="Exception" ilk="class" name="integrityError" />
      <scope classrefs="Exception" ilk="class" name="internalError" />
      <scope classrefs="Exception" ilk="class" name="noError" />
      <scope ilk="function" name="odbc" />
      <scope classrefs="Exception" ilk="class" name="opError" />
      <scope classrefs="Exception" ilk="class" name="progError" />
      <import module="warnings" />
    </scope>
    