<scope doc="Manages the cache of generated Python code.  Description" ilk="blob" lang="Python3" name="win32com.client.gencache">
      <scope doc="Add a newly generated file to the cache dictionary." ilk="function" name="AddModuleToCache" signature="AddModuleToCache(typelibclsid, lcid, major, minor, verbose=1, bFlushNow=True)" />
      <import module="CLSIDToClass" />
      <scope doc="Given a COM prog_id, return an object that is using makepy support, building if necessary" ilk="function" name="EnsureDispatch" signature="EnsureDispatch(prog_id, bForDemand=1)" />
      <scope doc="Ensure Python support is loaded for a type library, generating if necessary." ilk="function" name="EnsureModule" signature="EnsureModule(typelibCLSID, lcid, major, minor, progressInstance=None, bValidateFile=True, bForDemand=0, bBuildHidden=1)" />
      <scope doc="Check we have support for a type library, generating if not." ilk="function" name="EnsureModuleForTypelibInterface" signature="EnsureModuleForTypelibInterface(typelib_ob, progressInstance=None, bForDemand=0, bBuildHidden=1)" />
      <scope doc="Drop any references to a typelib previously added with EnsureModuleForTypelibInterface and forDemand" ilk="function" name="ForgetAboutTypelibInterface" signature="ForgetAboutTypelibInterface(typelib_ob)" />
      <scope doc="Get a Python class for a CLSID" ilk="function" name="GetClassForCLSID" signature="GetClassForCLSID(clsid)" />
      <scope doc="Get a Python class for a Program ID" ilk="function" name="GetClassForProgID" signature="GetClassForProgID(progid)" />
      <scope doc="Returns the name of the path to generate to." ilk="function" name="GetGeneratePath" signature="GetGeneratePath()" />
      <scope doc="Given the clsid, lcid, major and  minor for a type lib, return the file name (no extension) providing this support." ilk="function" name="GetGeneratedFileName" signature="GetGeneratedFileName(clsid, lcid, major, minor)" />
      <scope ilk="function" name="GetGeneratedInfos" signature="GetGeneratedInfos()" />
      <scope doc="Get a Python module for a CLSID" ilk="function" name="GetModuleForCLSID" signature="GetModuleForCLSID(clsid)" />
      <scope doc="Get a Python module for a Program ID" ilk="function" name="GetModuleForProgID" signature="GetModuleForProgID(progid)" />
      <scope doc="Get a Python module for a type library ID" ilk="function" name="GetModuleForTypelib" signature="GetModuleForTypelib(typelibCLSID, lcid, major, minor)" />
      <scope doc="Generate support for a type library." ilk="function" name="MakeModuleForTypelib" signature="MakeModuleForTypelib(typelibCLSID, lcid, major, minor, progressInstance=None, bGUIProgress=None, bForDemand=0, bBuildHidden=1)" />
      <scope doc="Generate support for a type library." ilk="function" name="MakeModuleForTypelibInterface" signature="MakeModuleForTypelibInterface(typelib_ob, progressInstance=None, bForDemand=0, bBuildHidden=1)" />
      <scope doc="Rebuild the cache indexes from the file system." ilk="function" name="Rebuild" signature="Rebuild(verbose=1)" />
      <scope doc="Reverse of GetGeneratedFileName()" ilk="function" name="SplitGeneratedFileName" signature="SplitGeneratedFileName(fname)" />
      <scope ilk="function" name="__init__" signature="__init__()" />
      <variable citdl="int" name="bForDemandDefault" />
      <variable citdl="dict" name="clsidToTypelib" />
      <variable citdl="dict" name="demandGeneratedTypeLibraries" />
      <import module="glob" />
      <variable citdl="bool" name="is_readonly" />
      <import module="operator" />
      <import module="os" />
      <import module="pickle" />
      <variable citdl="int" name="pickleVersion" />
      <import module="pythoncom" />
      <import module="pywintypes" />
      <import module="sys" />
      <import module="traceback" />
      <scope ilk="function" name="usage" signature="usage()" />
      <variable citdl="dict" name="versionRedirectMap" />
      <import module="win32com" />
    </scope>
    