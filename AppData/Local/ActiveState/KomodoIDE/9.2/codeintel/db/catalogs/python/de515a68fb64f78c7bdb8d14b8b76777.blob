<scope doc="General client side utilities.  This module contains utility functions, used primarily by advanced COM" ilk="blob" lang="Python" name="win32com.client.util">
      <scope doc="Creates a Dispatch based COM object." ilk="function" name="Dispatch" signature="Dispatch(dispatch, userName=None, resultCLSID=None, typeinfo=None, UnicodeToString=None, clsctx=21)" />
      <scope classrefs="Enumerator" ilk="class" line="70" lineend="75" name="EnumVARIANT">
        <scope attributes="protected" ilk="function" line="74" lineend="75" name="_make_retval_" returns="_get_good_object_()" signature="_make_retval_(result)">
          <variable citdl="EnumVARIANT" ilk="argument" name="self" />
          <variable ilk="argument" name="result" />
        </scope>
        <variable attributes="__instancevar__" line="72" name="resultCLSID" />
        <scope attributes="__ctor__" ilk="function" line="71" lineend="73" name="__init__" signature="EnumVARIANT(enum, resultCLSID=None)">
          <variable citdl="EnumVARIANT" ilk="argument" name="self" />
          <variable ilk="argument" name="enum" />
          <variable ilk="argument" name="resultCLSID" />
        </scope>
      </scope>
      <scope doc="A class that provides indexed access into an Enumerator  By wrapping a PyIEnum* object in this class, you can perform" ilk="class" line="22" lineend="68" name="Enumerator">
        <scope ilk="function" line="63" lineend="64" name="Reset" returns="self._oleobj_.Reset()" signature="Reset()">
          <variable citdl="Enumerator" ilk="argument" name="self" />
        </scope>
        <variable attributes="protected __instancevar__" line="34" name="_oleobj_" />
        <scope ilk="function" line="36" lineend="37" name="__getitem__" returns="self.__GetIndex()" signature="__getitem__(index)">
          <variable citdl="Enumerator" ilk="argument" name="self" />
          <variable ilk="argument" name="index" />
        </scope>
        <variable attributes="__instancevar__" citdl="int" line="35" name="index" />
        <scope ilk="function" line="65" lineend="66" name="Clone" returns="self.__class__()" signature="Clone()">
          <variable citdl="Enumerator" ilk="argument" name="self" />
        </scope>
        <scope ilk="function" line="57" lineend="62" name="Next" returns="tuple()" signature="Next(count=1)">
          <variable citdl="Enumerator" ilk="argument" name="self" />
          <variable citdl="int" ilk="argument" name="count" />
          <variable citdl="self._oleobj_.Next()" line="58" name="ret" />
          <variable citdl="list" line="59" name="realRets" />
        </scope>
        <scope attributes="private" ilk="function" line="41" lineend="56" name="__GetIndex" returns="self._make_retval_()" signature="__GetIndex(index)">
          <variable citdl="Enumerator" ilk="argument" name="self" />
          <variable ilk="argument" name="index" />
          <variable citdl="self._oleobj_.Next()" line="53" name="result" />
        </scope>
        <scope attributes="protected" ilk="function" line="67" lineend="68" name="_make_retval_" signature="_make_retval_(result)">
          <variable citdl="Enumerator" ilk="argument" name="self" />
          <variable ilk="argument" name="result" />
        </scope>
        <scope ilk="function" line="38" lineend="39" name="__call__" returns="self.__GetIndex()" signature="__call__(index)">
          <variable citdl="Enumerator" ilk="argument" name="self" />
          <variable ilk="argument" name="index" />
        </scope>
        <scope attributes="__ctor__" ilk="function" line="33" lineend="35" name="__init__" signature="Enumerator(enum)">
          <variable citdl="Enumerator" ilk="argument" name="self" />
          <variable ilk="argument" name="enum" />
        </scope>
      </scope>
      <scope ilk="class" line="77" lineend="84" name="Iterator">
        <scope ilk="function" line="81" lineend="82" name="__iter__" returns="Iterator" signature="__iter__()">
          <variable citdl="Iterator" ilk="argument" name="self" />
        </scope>
        <variable attributes="protected __instancevar__" citdl="iter()" line="80" name="_iter_" />
        <variable attributes="__instancevar__" line="79" name="resultCLSID" />
        <scope attributes="__ctor__" ilk="function" line="78" lineend="80" name="__init__" signature="Iterator(enum, resultCLSID=None)">
          <variable citdl="Iterator" ilk="argument" name="self" />
          <variable ilk="argument" name="enum" />
          <variable ilk="argument" name="resultCLSID" />
        </scope>
        <scope ilk="function" line="83" lineend="84" name="next" returns="_get_good_object_()" signature="next()">
          <variable citdl="Iterator" ilk="argument" name="self" />
        </scope>
      </scope>
      <scope classrefs="PyIUnknown" ilk="class" line="9" name="PyIDispatchType" />
      <scope doc="Wrap an object in a VARIANT enumerator." ilk="function" line="11" lineend="20" name="WrapEnum" returns="EnumVARIANT()" signature="WrapEnum(ob, resultCLSID=None)">
        <variable citdl="ob.QueryInterface()" ilk="argument" name="ob" />
        <variable ilk="argument" name="resultCLSID" />
      </scope>
      <import module="pythoncom" />
    </scope>
    