<scope doc="# General purpose service utilities, both for standard Python scripts, # and for for Python programs which run as services... #" ilk="blob" lang="Python" name="win32serviceutil">
      <scope ilk="function" line="184" lineend="232" name="ChangeServiceConfig" signature="ChangeServiceConfig(pythonClassString, serviceName, startType=None, errorControl=None, bRunInteractive=0, serviceDeps=None, userName=None, password=None, exeName=None, displayName=None, perfMonIni=None, perfMonDll=None, exeArgs=None, description=None)">
        <variable ilk="argument" name="userName" />
        <variable citdl="int" line="200" name="serviceType" />
        <variable ilk="argument" name="displayName" />
        <variable ilk="argument" name="description" />
        <variable citdl="LocatePythonServiceExe()" ilk="argument" name="exeName" />
        <variable ilk="argument" name="exeArgs" />
        <variable citdl="SmartOpenService()" line="205" name="hs" />
        <variable citdl="_GetCommandLine()" line="203" name="commandLine" />
        <variable citdl="int" ilk="argument" name="bRunInteractive" />
        <variable ilk="argument" name="perfMonDll" />
        <variable citdl="win32service.OpenSCManager()" line="199" name="hscm" />
        <variable ilk="argument" name="pythonClassString" />
        <variable ilk="argument" name="perfMonIni" />
        <variable citdl="win32service.SERVICE_NO_CHANGE" ilk="argument" name="startType" />
        <variable ilk="argument" name="serviceDeps" />
        <variable ilk="argument" name="serviceName" />
        <variable ilk="argument" name="password" />
        <variable citdl="win32service.SERVICE_NO_CHANGE" ilk="argument" name="errorControl" />
      </scope>
      <scope ilk="function" line="296" lineend="307" name="ControlService" returns="win32service.ControlService()" signature="ControlService(serviceName, code, machine=None)">
        <variable citdl="win32service.ControlService()" line="302" name="status" />
        <variable ilk="argument" name="code" />
        <variable citdl="SmartOpenService()" line="300" name="hs" />
        <variable citdl="win32service.OpenSCManager()" line="297" name="hscm" />
        <variable ilk="argument" name="machine" />
        <variable ilk="argument" name="serviceName" />
      </scope>
      <scope ilk="function" line="433" lineend="453" name="DebugService" signature="DebugService(cls, argv=[])">
        <variable citdl="cls()" line="445" name="g_debugService" />
        <variable citdl="list" ilk="argument" name="argv" />
        <variable ilk="argument" name="cls" />
      </scope>
      <scope ilk="function" line="455" lineend="471" name="GetServiceClassString" returns="pickle.whichmodule()" signature="GetServiceClassString(cls, argv=None)">
        <variable line="463" name="path" />
        <variable citdl="pickle.whichmodule()" line="459" name="modName" />
        <variable citdl="os.path.join()" line="462" name="fname" />
        <variable citdl="sys.argv" ilk="argument" name="argv" />
        <variable ilk="argument" name="cls" />
      </scope>
      <scope ilk="function" line="258" lineend="272" name="GetServiceCustomOption" signature="GetServiceCustomOption(serviceName, option, defaultValue=None)">
        <variable ilk="argument" name="defaultValue" />
        <variable citdl="serviceName._svc_name_" ilk="argument" name="serviceName" />
        <variable ilk="argument" name="option" />
        <variable citdl="win32api.RegCreateKey()" line="265" name="key" />
      </scope>
      <scope doc="Utility function allowing services to process the command line." ilk="function" line="507" lineend="713" name="HandleCommandLine" returns="exc.winerror" signature="HandleCommandLine(cls, serviceClassString=None, argv=None, customInstallOptions=&apos;&apos;, customOptionHandler=None)">
        <variable ilk="argument" name="customOptionHandler" />
        <variable citdl="GetServiceClassString()" ilk="argument" name="serviceClassString" />
        <variable line="538" name="startup" />
        <variable citdl="str" line="565" name="arg" />
        <variable citdl="str" ilk="argument" name="customInstallOptions" />
        <variable citdl="__builtins__.str.join()" line="591" name="svcArgs" />
        <variable citdl="cls._svc_name_" line="523" name="serviceName" />
        <variable citdl="cls._svc_deps_" line="617" name="serviceDeps" />
        <variable ilk="argument" name="cls" />
        <variable citdl="dict" line="553" name="map" />
        <variable citdl="cls._svc_description_" line="629" name="description" />
        <variable citdl="cls._exe_args_" line="625" name="exeArgs" />
        <variable citdl="val" line="549" name="perfMonDll" />
        <variable citdl="sys.argv" ilk="argument" name="argv" />
        <variable citdl="val" line="536" name="password" />
        <variable citdl="int" line="540" name="waitSecs" />
        <variable citdl="val" line="535" name="userName" />
        <variable citdl="cls._exe_name_" line="593" name="exeName" />
        <variable citdl="exc.winerror" line="516" name="err" />
        <variable citdl="cls._svc_display_name_" line="524" name="serviceDisplayName" />
        <variable citdl="val" line="537" name="perfMonIni" />
        <variable citdl="int" line="566" name="knownArg" />
        <variable citdl="int" line="539" name="interactive" />
      </scope>
      <scope ilk="function" line="93" lineend="136" name="InstallPerfmonForService" signature="InstallPerfmonForService(serviceName, iniName, dllName=None)">
        <variable citdl="os.path.join()" line="100" name="tryName" />
        <variable ilk="argument" name="iniName" />
        <variable citdl="win32api.RegOpenKey()" line="110" name="hkey" />
        <variable citdl="win32api.GetProfileVal()" ilk="argument" name="dllName" />
        <variable ilk="argument" name="serviceName" />
        <variable citdl="win32api.RegCreateKey()" line="112" name="subKey" />
        <variable citdl="os.getcwd()" line="127" name="oldPath" />
      </scope>
      <scope ilk="function" line="234" lineend="241" name="InstallPythonClassString" signature="InstallPythonClassString(pythonClassString, serviceName)">
        <variable ilk="argument" name="pythonClassString" />
        <variable ilk="argument" name="serviceName" />
        <variable citdl="win32api.RegCreateKey()" line="237" name="key" />
      </scope>
      <scope ilk="function" line="144" lineend="182" name="InstallService" signature="InstallService(pythonClassString, serviceName, displayName, startType=None, errorControl=None, bRunInteractive=0, serviceDeps=None, userName=None, password=None, exeName=None, perfMonIni=None, perfMonDll=None, exeArgs=None, description=None)">
        <variable ilk="argument" name="userName" />
        <variable citdl="int" line="148" name="serviceType" />
        <variable ilk="argument" name="displayName" />
        <variable ilk="argument" name="description" />
        <variable citdl="LocatePythonServiceExe()" ilk="argument" name="exeName" />
        <variable ilk="argument" name="exeArgs" />
        <variable citdl="win32service.CreateService()" line="158" name="hs" />
        <variable citdl="_GetCommandLine()" line="155" name="commandLine" />
        <variable citdl="int" ilk="argument" name="bRunInteractive" />
        <variable ilk="argument" name="perfMonDll" />
        <variable citdl="win32service.OpenSCManager()" line="156" name="hscm" />
        <variable ilk="argument" name="pythonClassString" />
        <variable ilk="argument" name="perfMonIni" />
        <variable citdl="win32service.SERVICE_DEMAND_START" ilk="argument" name="startType" />
        <variable ilk="argument" name="serviceDeps" />
        <variable ilk="argument" name="serviceName" />
        <variable ilk="argument" name="password" />
        <variable citdl="win32service.SERVICE_ERROR_NORMAL" ilk="argument" name="errorControl" />
      </scope>
      <scope ilk="function" line="14" lineend="48" name="LocatePythonServiceExe" returns="win32api.GetFullPathName()" signature="LocatePythonServiceExe(exeName=None)">
        <variable citdl="str" line="47" name="msg" />
        <variable line="28" name="baseName" />
        <variable citdl="os.path.join()" line="40" name="look" />
        <variable citdl="str" ilk="argument" name="exeName" />
      </scope>
      <scope ilk="function" line="84" lineend="91" name="LocateSpecificServiceExe" signature="LocateSpecificServiceExe(serviceName)">
        <variable citdl="win32api.RegOpenKey()" line="87" name="hkey" />
        <variable ilk="argument" name="serviceName" />
      </scope>
      <scope ilk="function" line="473" lineend="484" name="QueryServiceStatus" returns="win32service.QueryServiceStatus()" signature="QueryServiceStatus(serviceName, machine=None)">
        <variable ilk="argument" name="machine" />
        <variable citdl="SmartOpenService()" line="477" name="hs" />
        <variable ilk="argument" name="serviceName" />
        <variable citdl="win32service.QueryServiceStatus()" line="479" name="status" />
        <variable citdl="win32service.OpenSCManager()" line="474" name="hscm" />
      </scope>
      <scope ilk="function" line="275" lineend="294" name="RemoveService" signature="RemoveService(serviceName)">
        <variable citdl="SmartOpenService()" line="284" name="hs" />
        <variable ilk="argument" name="serviceName" />
        <variable citdl="win32service.OpenSCManager()" line="282" name="hscm" />
      </scope>
      <scope doc="Stop the service, and then start it again (with some tolerance for allowing it to stop.)" ilk="function" line="405" lineend="423" name="RestartService" signature="RestartService(serviceName, args=None, waitSeconds=30, machine=None)">
        <variable ilk="argument" name="machine" />
        <variable citdl="int" ilk="argument" name="waitSeconds" />
        <variable ilk="argument" name="serviceName" />
        <variable ilk="argument" name="args" />
      </scope>
      <scope doc="# Useful base class to build services from." ilk="class" line="718" lineend="810" name="ServiceFramework">
        <scope ilk="function" line="774" lineend="779" name="SvcOther" signature="SvcOther(control)">
          <variable citdl="ServiceFramework" ilk="argument" name="self" />
          <variable ilk="argument" name="control" />
        </scope>
        <variable attributes="protected" line="724" name="_svc_deps_" />
        <scope ilk="function" line="781" lineend="782" name="ServiceCtrlHandler" signature="ServiceCtrlHandler(control)">
          <variable citdl="ServiceFramework" ilk="argument" name="self" />
          <variable ilk="argument" name="control" />
        </scope>
        <scope ilk="function" line="735" lineend="744" name="GetAcceptedControls" returns="int" signature="GetAcceptedControls()">
          <variable citdl="ServiceFramework" ilk="argument" name="self" />
          <variable citdl="int" line="739" name="accepted" />
        </scope>
        <variable attributes="__instancevar__" citdl="int" line="733" name="checkPoint" />
        <scope ilk="function" line="790" lineend="802" name="ServiceCtrlHandlerEx" signature="ServiceCtrlHandlerEx(control, event_type, data)">
          <variable citdl="ServiceFramework" ilk="argument" name="self" />
          <variable ilk="argument" name="control" />
          <variable ilk="argument" name="event_type" />
          <variable ilk="argument" name="data" />
        </scope>
        <scope ilk="function" line="746" lineend="768" name="ReportServiceStatus" signature="ReportServiceStatus(serviceStatus, waitHint=5000, win32ExitCode=0, svcExitCode=0)">
          <variable citdl="ServiceFramework" ilk="argument" name="self" />
          <variable ilk="argument" name="serviceStatus" />
          <variable citdl="int" ilk="argument" name="waitHint" />
          <variable citdl="int" ilk="argument" name="win32ExitCode" />
          <variable citdl="int" ilk="argument" name="svcExitCode" />
          <variable citdl="int" line="750" name="accepted" />
          <variable citdl="int" line="755" name="checkPoint" />
          <variable citdl="tuple" line="761" name="status" />
        </scope>
        <scope attributes="__ctor__" ilk="function" line="729" lineend="733" name="__init__" signature="ServiceFramework(args)">
          <import line="730" module="servicemanager" />
          <variable citdl="ServiceFramework" ilk="argument" name="self" />
          <variable ilk="argument" name="args" />
        </scope>
        <variable attributes="__instancevar__" citdl="servicemanager.RegisterServiceCtrlHandler()" line="731" name="ssh" />
        <variable attributes="protected" line="725" name="_exe_name_" />
        <variable attributes="protected" line="726" name="_exe_args_" />
        <scope ilk="function" line="770" lineend="772" name="SvcInterrogate" signature="SvcInterrogate()">
          <variable citdl="ServiceFramework" ilk="argument" name="self" />
        </scope>
        <scope ilk="function" line="804" lineend="810" name="SvcRun" signature="SvcRun()">
          <variable citdl="ServiceFramework" ilk="argument" name="self" />
        </scope>
        <variable attributes="protected" line="727" name="_svc_description_" />
        <scope ilk="function" line="785" lineend="788" name="SvcOtherEx" signature="SvcOtherEx(control, event_type, data)">
          <variable citdl="ServiceFramework" ilk="argument" name="self" />
          <variable ilk="argument" name="control" />
          <variable ilk="argument" name="event_type" />
          <variable ilk="argument" name="data" />
        </scope>
      </scope>
      <scope doc="# Utility functions for Services, to allow persistant properties." ilk="function" line="244" lineend="256" name="SetServiceCustomOption" signature="SetServiceCustomOption(serviceName, option, value)">
        <variable citdl="win32api.RegCreateKey()" line="249" name="key" />
        <variable citdl="serviceName._svc_name_" ilk="argument" name="serviceName" />
        <variable ilk="argument" name="option" />
        <variable ilk="argument" name="value" />
      </scope>
      <scope doc="# Open a service given either it&apos;s long or short name." ilk="function" line="74" lineend="82" name="SmartOpenService" returns="win32service.OpenService()" signature="SmartOpenService(hscm, name, access)">
        <variable ilk="argument" name="access" />
        <variable citdl="win32service.GetServiceKeyName()" ilk="argument" name="name" />
        <variable ilk="argument" name="hscm" />
      </scope>
      <scope ilk="function" line="393" lineend="403" name="StartService" signature="StartService(serviceName, args=None, machine=None)">
        <variable ilk="argument" name="machine" />
        <variable citdl="SmartOpenService()" line="397" name="hs" />
        <variable ilk="argument" name="serviceName" />
        <variable ilk="argument" name="args" />
        <variable citdl="win32service.OpenSCManager()" line="394" name="hscm" />
      </scope>
      <scope ilk="function" line="390" lineend="391" name="StopService" returns="ControlService()" signature="StopService(serviceName, machine=None)">
        <variable ilk="argument" name="machine" />
        <variable ilk="argument" name="serviceName" />
      </scope>
      <scope ilk="function" line="368" lineend="387" name="StopServiceWithDeps" signature="StopServiceWithDeps(serviceName, machine=None, waitSecs=30)">
        <variable citdl="int" ilk="argument" name="waitSecs" />
        <variable citdl="win32service.OpenService()" line="374" name="hs" />
        <variable citdl="win32service.OpenSCManager()" line="370" name="hscm" />
        <variable ilk="argument" name="machine" />
        <variable ilk="argument" name="serviceName" />
        <variable citdl="__FindSvcDeps()" line="372" name="deps" />
      </scope>
      <scope doc="Waits for the service to return the specified status." ilk="function" line="342" lineend="351" name="WaitForServiceStatus" signature="WaitForServiceStatus(serviceName, status, waitSecs, machine=None)">
        <variable ilk="argument" name="status" />
        <variable ilk="argument" name="machine" />
        <variable ilk="argument" name="serviceName" />
        <variable ilk="argument" name="waitSecs" />
        <variable line="346" name="now_status" />
      </scope>
      <scope classrefs="StandardError" doc="Unspecified run-time error." ilk="class" line="12" name="error" />
      <import module="os" />
      <import module="pywintypes" />
      <import module="sys" />
      <scope ilk="function" line="486" lineend="505" name="usage" signature="usage()">
        <variable line="488" name="fname" />
      </scope>
      <import module="win32api" />
      <import module="win32con" />
      <import module="win32service" />
      <import module="winerror" />
      <scope attributes="protected __hidden__" ilk="function" line="50" lineend="71" name="_GetServiceShortName" returns="win32api.RegEnumKey()" signature="_GetServiceShortName(longName)">
        <variable citdl="longName.lower()" ilk="argument" name="longName" />
        <variable citdl="int" line="54" name="access" />
        <variable citdl="win32api.RegOpenKey()" line="55" name="hkey" />
        <variable line="56" name="num" />
        <variable citdl="win32api.RegEnumKey()" line="61" name="svc" />
        <variable citdl="win32api.RegOpenKey()" line="62" name="skey" />
        <variable citdl="str()" line="65" name="thisName" />
      </scope>
      <scope attributes="protected __hidden__" ilk="function" line="425" lineend="431" name="_DebugCtrlHandler" returns="bool" signature="_DebugCtrlHandler(evt)">
        <variable ilk="argument" name="evt" />
      </scope>
      <scope attributes="private __hidden__" ilk="function" line="334" lineend="340" name="__ResolveDeps" returns="__ResolveDeps()" signature="__ResolveDeps(findName, dict)">
        <variable ilk="argument" name="findName" />
        <variable ilk="argument" name="dict" />
        <variable citdl="dict.get()" line="335" name="items" />
        <variable citdl="list" line="336" name="retList" />
      </scope>
      <scope attributes="private __hidden__" ilk="function" line="309" lineend="331" name="__FindSvcDeps" returns="__ResolveDeps()" signature="__FindSvcDeps(findName)">
        <variable citdl="str()" ilk="argument" name="findName" />
        <variable citdl="dict" line="311" name="dict" />
        <variable citdl="win32api.RegOpenKey()" line="312" name="k" />
        <variable citdl="int" line="313" name="num" />
        <variable citdl="win32api.RegEnumKey()" line="316" name="svc" />
        <variable citdl="win32api.RegOpenKey()" line="320" name="sk" />
        <variable citdl="tuple" line="324" name="deps" />
        <variable citdl="dep.lower()" line="326" name="dep" />
        <variable citdl="dict.get()" line="327" name="dep_on" />
      </scope>
      <scope attributes="private __hidden__" ilk="function" line="353" lineend="365" name="__StopServiceWithTimeout" signature="__StopServiceWithTimeout(hs, waitSecs=30)">
        <variable ilk="argument" name="hs" />
        <variable citdl="int" ilk="argument" name="waitSecs" />
        <variable citdl="win32service.QueryServiceStatus()" line="355" name="status" />
      </scope>
      <scope attributes="protected __hidden__" ilk="function" line="138" lineend="142" name="_GetCommandLine" returns="str" signature="_GetCommandLine(exeName, exeArgs)">
        <variable ilk="argument" name="exeName" />
        <variable ilk="argument" name="exeArgs" />
      </scope>
    </scope>
    