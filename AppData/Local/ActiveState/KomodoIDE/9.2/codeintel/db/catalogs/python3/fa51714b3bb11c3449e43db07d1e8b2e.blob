<scope doc="Utilities for makegw - Parse a header file to build an interface  This module contains the core code for parsing a header file describing a" ilk="blob" lang="Python3" name="win32com.makegw.makegwparse">
      <variable citdl="dict" line="512" name="AllConverters" />
      <scope classrefs="object" doc="An instance for a specific type of argument.     Knows how to convert itself" ilk="class" line="33" lineend="180" name="ArgFormatter">
        <scope ilk="function" line="120" lineend="121" name="GetUnconstType" returns="self.arg.unc_type" signature="GetUnconstType()">
          <variable citdl="ArgFormatter" ilk="argument" name="self" />
        </scope>
        <scope doc="Declare the variable used as the PyArg_ParseTuple param for a gateway" ilk="function" line="132" lineend="141" name="DeclareParseArgTupleInputConverter" returns="str" signature="DeclareParseArgTupleInputConverter()">
          <variable citdl="ArgFormatter" ilk="argument" name="self" />
        </scope>
        <scope doc="Determines if this arg forces a USES_CONVERSION macro" ilk="function" line="178" lineend="180" name="NeedUSES_CONVERSION" returns="int" signature="NeedUSES_CONVERSION()">
          <variable citdl="ArgFormatter" ilk="argument" name="self" />
        </scope>
        <scope doc="Get a string of C++ code to be executed before (ie, to initialise) the Py_BuildValue conversion for Gateways" ilk="function" line="154" lineend="160" name="GetBuildForGatewayPreCode" returns="self.arg.name" signature="GetBuildForGatewayPreCode()">
          <variable citdl="ArgFormatter" ilk="argument" name="self" />
          <variable citdl="GetBuildForInterfacePreCode()" line="156" name="s" />
        </scope>
        <scope doc="Get the argument to be passes to Py_BuildValue" ilk="function" line="69" lineend="71" name="GetBuildValueArg" returns="self.arg.name" signature="GetBuildValueArg()">
          <variable citdl="ArgFormatter" ilk="argument" name="self" />
        </scope>
        <scope attributes="protected" doc="Given the indirection level I was declared at (0=Normal, 1=*, 2=**) return a string prefix so I can pass to a function with the required indirection (where the default is the indirection of the method&apos;s param." ilk="function" line="41" lineend="59" name="_IndirectPrefix" returns="tuple" signature="_IndirectPrefix(indirectionFrom, indirectionTo)">
          <variable citdl="ArgFormatter" ilk="argument" name="self" />
          <variable ilk="argument" name="indirectionFrom" />
          <variable ilk="argument" name="indirectionTo" />
          <variable line="50" name="dif" />
        </scope>
        <scope doc="Return cleanup code for C++ args passed to the interface method." ilk="function" line="105" lineend="110" name="GetInterfaceArgCleanup" returns="str" signature="GetInterfaceArgCleanup()">
          <variable citdl="ArgFormatter" ilk="argument" name="self" />
        </scope>
        <scope doc="Return cleanup code for C++ args passed to the interface method that must be executed with the GIL held" ilk="function" line="112" lineend="118" name="GetInterfaceArgCleanupGIL" returns="str" signature="GetInterfaceArgCleanupGIL()">
          <variable citdl="ArgFormatter" ilk="argument" name="self" />
        </scope>
        <variable attributes="__instancevar__" line="37" name="arg" />
        <scope ilk="function" line="60" lineend="68" name="GetIndirectedArgName" returns="self.arg.name" signature="GetIndirectedArgName(indirectFrom, indirectionTo)">
          <variable citdl="ArgFormatter" ilk="argument" name="self" />
          <variable citdl="self._GetDeclaredIndirection()" ilk="argument" name="indirectFrom" />
          <variable ilk="argument" name="indirectionTo" />
        </scope>
        <scope attributes="__ctor__" ilk="function" line="35" lineend="40" name="__init__" signature="ArgFormatter(arg, builtinIndirection, declaredIndirection=0)">
          <variable citdl="ArgFormatter" ilk="argument" name="self" />
          <variable ilk="argument" name="arg" />
          <variable ilk="argument" name="builtinIndirection" />
          <variable citdl="int" ilk="argument" name="declaredIndirection" />
        </scope>
        <variable attributes="__instancevar__" line="38" name="builtinIndirection" />
        <scope doc="Get a string of C++ code to be executed after (ie, to finalise) the Py_BuildValue conversion for Gateways" ilk="function" line="166" lineend="172" name="GetBuildForGatewayPostCode" returns="self.arg.name" signature="GetBuildForGatewayPostCode()">
          <variable citdl="ArgFormatter" ilk="argument" name="self" />
          <variable citdl="self.arg.name" line="168" name="s" />
        </scope>
        <scope ilk="function" line="123" lineend="124" name="SetGatewayMode" signature="SetGatewayMode()">
          <variable citdl="ArgFormatter" ilk="argument" name="self" />
        </scope>
        <variable attributes="__instancevar__" citdl="int" line="40" name="gatewayMode" />
        <scope doc="Get a string of C++ code to be executed after (ie, to finalise) the PyArg_ParseTuple conversion" ilk="function" line="142" lineend="147" name="GetParsePostCode" returns="str" signature="GetParsePostCode()">
          <variable citdl="ArgFormatter" ilk="argument" name="self" />
        </scope>
        <scope doc="Get a string of C++ code to be executed before (ie, to initialise) the Py_BuildValue conversion for Interfaces" ilk="function" line="148" lineend="153" name="GetBuildForInterfacePreCode" returns="str" signature="GetBuildForInterfacePreCode()">
          <variable citdl="ArgFormatter" ilk="argument" name="self" />
        </scope>
        <scope attributes="protected" ilk="function" line="125" lineend="131" name="_GetDeclaredIndirection" returns="self.arg.indirectionLevel" signature="_GetDeclaredIndirection()">
          <variable citdl="ArgFormatter" ilk="argument" name="self" />
        </scope>
        <scope doc="Get the argument to be passed to PyArg_ParseTuple" ilk="function" line="72" lineend="78" name="GetParseTupleArg" returns="ArgFormatter.GetIndirectedArgName()" signature="GetParseTupleArg()">
          <variable citdl="ArgFormatter" ilk="argument" name="self" />
        </scope>
        <scope doc="Get a string of C++ code to be executed after (ie, to finalise) the Py_BuildValue conversion for Interfaces" ilk="function" line="161" lineend="165" name="GetBuildForInterfacePostCode" returns="str" signature="GetBuildForInterfacePostCode()">
          <variable citdl="ArgFormatter" ilk="argument" name="self" />
        </scope>
        <scope ilk="function" line="173" lineend="174" name="GetAutoduckString" returns="tuple" signature="GetAutoduckString()">
          <variable citdl="ArgFormatter" ilk="argument" name="self" />
        </scope>
        <scope doc="Provide information about the C++ object used." ilk="function" line="79" lineend="103" name="GetInterfaceCppObjectInfo" returns="tuple" signature="GetInterfaceCppObjectInfo()">
          <variable citdl="ArgFormatter" ilk="argument" name="self" />
        </scope>
        <scope attributes="protected" doc="Returns a string with the description of the type." ilk="function" line="175" lineend="177" name="_GetPythonTypeDesc" signature="_GetPythonTypeDesc()">
          <variable citdl="ArgFormatter" ilk="argument" name="self" />
        </scope>
        <variable attributes="__instancevar__" citdl="int" line="39" name="declaredIndirection" />
      </scope>
      <scope classrefs="ArgFormatterPythonCOM" ilk="class" line="291" lineend="304" name="ArgFormatterBSTR">
        <scope ilk="function" line="300" lineend="302" name="GetBuildForInterfacePostCode" returns="tuple" signature="GetBuildForInterfacePostCode()">
          <variable citdl="ArgFormatterBSTR" ilk="argument" name="self" />
        </scope>
        <scope ilk="function" line="294" lineend="295" name="GetParsePostCode" returns="tuple" signature="GetParsePostCode()">
          <variable citdl="ArgFormatterBSTR" ilk="argument" name="self" />
        </scope>
        <scope ilk="function" line="296" lineend="299" name="GetBuildForInterfacePreCode" returns="tuple" signature="GetBuildForInterfacePreCode()">
          <variable citdl="ArgFormatterBSTR" ilk="argument" name="self" />
          <variable citdl="self.GetIndirectedArgName()" line="297" name="notdirected" />
        </scope>
        <scope attributes="protected" ilk="function" line="292" lineend="293" name="_GetPythonTypeDesc" returns="str" signature="_GetPythonTypeDesc()">
          <variable citdl="ArgFormatterBSTR" ilk="argument" name="self" />
        </scope>
        <scope ilk="function" line="303" lineend="304" name="GetBuildForGatewayPostCode" returns="str" signature="GetBuildForGatewayPostCode()">
          <variable citdl="ArgFormatterBSTR" ilk="argument" name="self" />
        </scope>
      </scope>
      <scope classrefs="ArgFormatter" doc="# Special formatter for floats since they&apos;re smaller than Python floats." ilk="class" line="183" lineend="209" name="ArgFormatterFloat">
        <scope ilk="function" line="184" lineend="185" name="GetFormatChar" returns="str" signature="GetFormatChar()">
          <variable citdl="ArgFormatterFloat" ilk="argument" name="self" />
        </scope>
        <scope ilk="function" line="186" lineend="188" name="DeclareParseArgTupleInputConverter" returns="str" signature="DeclareParseArgTupleInputConverter()">
          <variable citdl="ArgFormatterFloat" ilk="argument" name="self" />
        </scope>
        <scope attributes="protected" ilk="function" line="191" lineend="192" name="_GetPythonTypeDesc" returns="str" signature="_GetPythonTypeDesc()">
          <variable citdl="ArgFormatterFloat" ilk="argument" name="self" />
        </scope>
        <scope ilk="function" line="197" lineend="200" name="GetBuildForGatewayPreCode" returns="str" signature="GetBuildForGatewayPreCode()">
          <variable citdl="ArgFormatterFloat" ilk="argument" name="self" />
        </scope>
        <scope ilk="function" line="193" lineend="194" name="GetBuildValueArg" returns="str" signature="GetBuildValueArg()">
          <variable citdl="ArgFormatterFloat" ilk="argument" name="self" />
        </scope>
        <scope ilk="function" line="195" lineend="196" name="GetBuildForInterfacePreCode" returns="str" signature="GetBuildForInterfacePreCode()">
          <variable citdl="ArgFormatterFloat" ilk="argument" name="self" />
        </scope>
        <scope ilk="function" line="189" lineend="190" name="GetParseTupleArg" returns="str" signature="GetParseTupleArg()">
          <variable citdl="ArgFormatterFloat" ilk="argument" name="self" />
        </scope>
        <scope ilk="function" line="201" lineend="209" name="GetParsePostCode" returns="self.arg.name" signature="GetParsePostCode()">
          <variable citdl="ArgFormatterFloat" ilk="argument" name="self" />
          <variable citdl="str" line="202" name="s" />
        </scope>
      </scope>
      <scope classrefs="ArgFormatterPythonCOM" ilk="class" line="401" lineend="410" name="ArgFormatterGeneric">
        <scope ilk="function" line="404" lineend="405" name="GetParsePostCode" returns="tuple" signature="GetParsePostCode()">
          <variable citdl="ArgFormatterGeneric" ilk="argument" name="self" />
        </scope>
        <scope ilk="function" line="408" lineend="410" name="GetBuildForInterfacePreCode" returns="tuple" signature="GetBuildForInterfacePreCode()">
          <variable citdl="ArgFormatterGeneric" ilk="argument" name="self" />
          <variable citdl="self.GetIndirectedArgName()" line="409" name="notdirected" />
        </scope>
        <scope attributes="protected" ilk="function" line="402" lineend="403" name="_GetPythonTypeDesc" returns="str" signature="_GetPythonTypeDesc()">
          <variable citdl="ArgFormatterGeneric" ilk="argument" name="self" />
        </scope>
        <scope ilk="function" line="406" lineend="407" name="GetInterfaceArgCleanup" returns="tuple" signature="GetInterfaceArgCleanup()">
          <variable citdl="ArgFormatterGeneric" ilk="argument" name="self" />
        </scope>
      </scope>
      <scope classrefs="ArgFormatterPythonCOM" ilk="class" line="423" lineend="430" name="ArgFormatterHANDLE">
        <scope ilk="function" line="426" lineend="427" name="GetParsePostCode" returns="tuple" signature="GetParsePostCode()">
          <variable citdl="ArgFormatterHANDLE" ilk="argument" name="self" />
        </scope>
        <scope ilk="function" line="428" lineend="430" name="GetBuildForInterfacePreCode" returns="tuple" signature="GetBuildForInterfacePreCode()">
          <variable citdl="ArgFormatterHANDLE" ilk="argument" name="self" />
          <variable citdl="self.GetIndirectedArgName()" line="429" name="notdirected" />
        </scope>
        <scope attributes="protected" ilk="function" line="424" lineend="425" name="_GetPythonTypeDesc" returns="str" signature="_GetPythonTypeDesc()">
          <variable citdl="ArgFormatterHANDLE" ilk="argument" name="self" />
        </scope>
      </scope>
      <scope classrefs="ArgFormatterPythonCOM" ilk="class" line="412" lineend="421" name="ArgFormatterIDLIST">
        <scope ilk="function" line="415" lineend="416" name="GetParsePostCode" returns="tuple" signature="GetParsePostCode()">
          <variable citdl="ArgFormatterIDLIST" ilk="argument" name="self" />
        </scope>
        <scope ilk="function" line="419" lineend="421" name="GetBuildForInterfacePreCode" returns="tuple" signature="GetBuildForInterfacePreCode()">
          <variable citdl="ArgFormatterIDLIST" ilk="argument" name="self" />
          <variable citdl="self.GetIndirectedArgName()" line="420" name="notdirected" />
        </scope>
        <scope attributes="protected" ilk="function" line="413" lineend="414" name="_GetPythonTypeDesc" returns="str" signature="_GetPythonTypeDesc()">
          <variable citdl="ArgFormatterIDLIST" ilk="argument" name="self" />
        </scope>
        <scope ilk="function" line="417" lineend="418" name="GetInterfaceArgCleanup" returns="tuple" signature="GetInterfaceArgCleanup()">
          <variable citdl="ArgFormatterIDLIST" ilk="argument" name="self" />
        </scope>
      </scope>
      <scope classrefs="ArgFormatterPythonCOM" ilk="class" line="352" lineend="362" name="ArgFormatterIID">
        <scope ilk="function" line="361" lineend="362" name="GetInterfaceCppObjectInfo" returns="tuple" signature="GetInterfaceCppObjectInfo()">
          <variable citdl="ArgFormatterIID" ilk="argument" name="self" />
        </scope>
        <scope ilk="function" line="355" lineend="356" name="GetParsePostCode" returns="tuple" signature="GetParsePostCode()">
          <variable citdl="ArgFormatterIID" ilk="argument" name="self" />
        </scope>
        <scope ilk="function" line="357" lineend="360" name="GetBuildForInterfacePreCode" returns="tuple" signature="GetBuildForInterfacePreCode()">
          <variable citdl="ArgFormatterIID" ilk="argument" name="self" />
          <variable citdl="self.GetIndirectedArgName()" line="359" name="notdirected" />
        </scope>
        <scope attributes="protected" ilk="function" line="353" lineend="354" name="_GetPythonTypeDesc" returns="str" signature="_GetPythonTypeDesc()">
          <variable citdl="ArgFormatterIID" ilk="argument" name="self" />
        </scope>
      </scope>
      <scope classrefs="ArgFormatterPythonCOM" ilk="class" line="447" lineend="469" name="ArgFormatterInterface">
        <scope ilk="function" line="452" lineend="459" name="GetParsePostCode" returns="tuple" signature="GetParsePostCode()">
          <variable citdl="ArgFormatterInterface" ilk="argument" name="self" />
          <variable citdl="self.GetIndirectedArgName()" line="455" name="sArg" />
        </scope>
        <scope ilk="function" line="464" lineend="466" name="GetBuildForGatewayPreCode" returns="tuple" signature="GetBuildForGatewayPreCode()">
          <variable citdl="ArgFormatterInterface" ilk="argument" name="self" />
          <variable citdl="self._IndirectPrefix()" line="465" name="sPrefix" />
        </scope>
        <scope ilk="function" line="448" lineend="450" name="GetInterfaceCppObjectInfo" returns="tuple" signature="GetInterfaceCppObjectInfo()">
          <variable citdl="ArgFormatterInterface" ilk="argument" name="self" />
        </scope>
        <scope ilk="function" line="461" lineend="462" name="GetBuildForInterfacePreCode" returns="tuple" signature="GetBuildForInterfacePreCode()">
          <variable citdl="ArgFormatterInterface" ilk="argument" name="self" />
        </scope>
        <scope ilk="function" line="468" lineend="469" name="GetInterfaceArgCleanup" returns="tuple" signature="GetInterfaceArgCleanup()">
          <variable citdl="ArgFormatterInterface" ilk="argument" name="self" />
        </scope>
      </scope>
      <scope classrefs="ArgFormatterPythonCOM" ilk="class" line="432" lineend="441" name="ArgFormatterLARGE_INTEGER">
        <scope ilk="function" line="433" lineend="434" name="GetKeyName" returns="str" signature="GetKeyName()">
          <variable citdl="ArgFormatterLARGE_INTEGER" ilk="argument" name="self" />
        </scope>
        <scope ilk="function" line="437" lineend="438" name="GetParsePostCode" returns="tuple" signature="GetParsePostCode()">
          <variable citdl="ArgFormatterLARGE_INTEGER" ilk="argument" name="self" />
        </scope>
        <scope ilk="function" line="439" lineend="441" name="GetBuildForInterfacePreCode" returns="tuple" signature="GetBuildForInterfacePreCode()">
          <variable citdl="ArgFormatterLARGE_INTEGER" ilk="argument" name="self" />
          <variable citdl="self.GetIndirectedArgName()" line="440" name="notdirected" />
        </scope>
        <scope attributes="protected" ilk="function" line="435" lineend="436" name="_GetPythonTypeDesc" returns="str" signature="_GetPythonTypeDesc()">
          <variable citdl="ArgFormatterLARGE_INTEGER" ilk="argument" name="self" />
        </scope>
      </scope>
      <scope classrefs="ArgFormatter" doc="# for types which are 64bits on AMD64 - eg, HWND" ilk="class" line="242" lineend="267" name="ArgFormatterLONG_PTR">
        <scope ilk="function" line="243" lineend="244" name="GetFormatChar" returns="str" signature="GetFormatChar()">
          <variable citdl="ArgFormatterLONG_PTR" ilk="argument" name="self" />
        </scope>
        <scope ilk="function" line="256" lineend="258" name="DeclareParseArgTupleInputConverter" returns="str" signature="DeclareParseArgTupleInputConverter()">
          <variable citdl="ArgFormatterLONG_PTR" ilk="argument" name="self" />
        </scope>
        <scope ilk="function" line="266" lineend="267" name="GetBuildForGatewayPostCode" returns="str" signature="GetBuildForGatewayPostCode()">
          <variable citdl="ArgFormatterLONG_PTR" ilk="argument" name="self" />
        </scope>
        <scope attributes="protected" ilk="function" line="250" lineend="251" name="_GetPythonTypeDesc" returns="str" signature="_GetPythonTypeDesc()">
          <variable citdl="ArgFormatterLONG_PTR" ilk="argument" name="self" />
        </scope>
        <scope ilk="function" line="252" lineend="253" name="GetBuildValueArg" returns="str" signature="GetBuildValueArg()">
          <variable citdl="ArgFormatterLONG_PTR" ilk="argument" name="self" />
        </scope>
        <scope ilk="function" line="262" lineend="265" name="GetBuildForInterfacePreCode" returns="tuple" signature="GetBuildForInterfacePreCode()">
          <variable citdl="ArgFormatterLONG_PTR" ilk="argument" name="self" />
          <variable citdl="self.GetIndirectedArgName()" line="263" name="notdirected" />
        </scope>
        <scope ilk="function" line="248" lineend="249" name="GetParseTupleArg" returns="str" signature="GetParseTupleArg()">
          <variable citdl="ArgFormatterLONG_PTR" ilk="argument" name="self" />
        </scope>
        <scope ilk="function" line="260" lineend="261" name="GetParsePostCode" returns="tuple" signature="GetParsePostCode()">
          <variable citdl="ArgFormatterLONG_PTR" ilk="argument" name="self" />
        </scope>
        <scope ilk="function" line="254" lineend="255" name="GetBuildForInterfacePostCode" returns="str" signature="GetBuildForInterfacePostCode()">
          <variable citdl="ArgFormatterLONG_PTR" ilk="argument" name="self" />
        </scope>
      </scope>
      <scope classrefs="ArgFormatterPythonCOM" ilk="class" line="306" lineend="328" name="ArgFormatterOLECHAR">
        <scope ilk="function" line="309" lineend="313" name="GetUnconstType" returns="list" signature="GetUnconstType()">
          <variable citdl="ArgFormatterOLECHAR" ilk="argument" name="self" />
        </scope>
        <scope ilk="function" line="327" lineend="328" name="GetBuildForGatewayPostCode" returns="str" signature="GetBuildForGatewayPostCode()">
          <variable citdl="ArgFormatterOLECHAR" ilk="argument" name="self" />
        </scope>
        <scope attributes="protected" ilk="function" line="307" lineend="308" name="_GetPythonTypeDesc" returns="str" signature="_GetPythonTypeDesc()">
          <variable citdl="ArgFormatterOLECHAR" ilk="argument" name="self" />
        </scope>
        <scope ilk="function" line="318" lineend="322" name="GetBuildForInterfacePreCode" returns="tuple" signature="GetBuildForInterfacePreCode()">
          <variable citdl="ArgFormatterOLECHAR" ilk="argument" name="self" />
          <variable citdl="self.GetIndirectedArgName()" line="320" name="notdirected" />
        </scope>
        <scope ilk="function" line="316" lineend="317" name="GetInterfaceArgCleanup" returns="str" signature="GetInterfaceArgCleanup()">
          <variable citdl="ArgFormatterOLECHAR" ilk="argument" name="self" />
        </scope>
        <scope ilk="function" line="314" lineend="315" name="GetParsePostCode" returns="tuple" signature="GetParsePostCode()">
          <variable citdl="ArgFormatterOLECHAR" ilk="argument" name="self" />
        </scope>
        <scope ilk="function" line="323" lineend="326" name="GetBuildForInterfacePostCode" returns="tuple" signature="GetBuildForInterfacePostCode()">
          <variable citdl="ArgFormatterOLECHAR" ilk="argument" name="self" />
        </scope>
      </scope>
      <scope classrefs="ArgFormatter" doc="An arg formatter for types exposed in the PythonCOM module" ilk="class" line="269" lineend="289" name="ArgFormatterPythonCOM">
        <scope ilk="function" line="271" lineend="272" name="GetFormatChar" returns="str" signature="GetFormatChar()">
          <variable citdl="ArgFormatterPythonCOM" ilk="argument" name="self" />
        </scope>
        <scope ilk="function" line="287" lineend="289" name="DeclareParseArgTupleInputConverter" returns="str" signature="DeclareParseArgTupleInputConverter()">
          <variable citdl="ArgFormatterPythonCOM" ilk="argument" name="self" />
        </scope>
        <scope attributes="protected" ilk="function" line="281" lineend="282" name="_GetPythonTypeDesc" returns="str" signature="_GetPythonTypeDesc()">
          <variable citdl="ArgFormatterPythonCOM" ilk="argument" name="self" />
        </scope>
        <scope ilk="function" line="283" lineend="284" name="GetBuildValueArg" returns="str" signature="GetBuildValueArg()">
          <variable citdl="ArgFormatterPythonCOM" ilk="argument" name="self" />
        </scope>
        <scope ilk="function" line="279" lineend="280" name="GetParseTupleArg" returns="str" signature="GetParseTupleArg()">
          <variable citdl="ArgFormatterPythonCOM" ilk="argument" name="self" />
        </scope>
        <scope ilk="function" line="285" lineend="286" name="GetBuildForInterfacePostCode" returns="str" signature="GetBuildForInterfacePostCode()">
          <variable citdl="ArgFormatterPythonCOM" ilk="argument" name="self" />
        </scope>
      </scope>
      <scope classrefs="ArgFormatterPythonCOM" ilk="class" line="392" lineend="399" name="ArgFormatterSTATSTG">
        <scope ilk="function" line="395" lineend="396" name="GetParsePostCode" returns="tuple" signature="GetParsePostCode()">
          <variable citdl="ArgFormatterSTATSTG" ilk="argument" name="self" />
        </scope>
        <scope ilk="function" line="397" lineend="399" name="GetBuildForInterfacePreCode" returns="tuple" signature="GetBuildForInterfacePreCode()">
          <variable citdl="ArgFormatterSTATSTG" ilk="argument" name="self" />
          <variable citdl="self.GetIndirectedArgName()" line="398" name="notdirected" />
        </scope>
        <scope attributes="protected" ilk="function" line="393" lineend="394" name="_GetPythonTypeDesc" returns="str" signature="_GetPythonTypeDesc()">
          <variable citdl="ArgFormatterSTATSTG" ilk="argument" name="self" />
        </scope>
      </scope>
      <scope classrefs="ArgFormatter" doc="# Special formatter for Shorts because they&apos;re # a different size than Python ints!" ilk="class" line="213" lineend="239" name="ArgFormatterShort">
        <scope ilk="function" line="214" lineend="215" name="GetFormatChar" returns="str" signature="GetFormatChar()">
          <variable citdl="ArgFormatterShort" ilk="argument" name="self" />
        </scope>
        <scope ilk="function" line="216" lineend="218" name="DeclareParseArgTupleInputConverter" returns="str" signature="DeclareParseArgTupleInputConverter()">
          <variable citdl="ArgFormatterShort" ilk="argument" name="self" />
        </scope>
        <scope attributes="protected" ilk="function" line="221" lineend="222" name="_GetPythonTypeDesc" returns="str" signature="_GetPythonTypeDesc()">
          <variable citdl="ArgFormatterShort" ilk="argument" name="self" />
        </scope>
        <scope ilk="function" line="227" lineend="230" name="GetBuildForGatewayPreCode" returns="str" signature="GetBuildForGatewayPreCode()">
          <variable citdl="ArgFormatterShort" ilk="argument" name="self" />
        </scope>
        <scope ilk="function" line="223" lineend="224" name="GetBuildValueArg" returns="str" signature="GetBuildValueArg()">
          <variable citdl="ArgFormatterShort" ilk="argument" name="self" />
        </scope>
        <scope ilk="function" line="225" lineend="226" name="GetBuildForInterfacePreCode" returns="str" signature="GetBuildForInterfacePreCode()">
          <variable citdl="ArgFormatterShort" ilk="argument" name="self" />
        </scope>
        <scope ilk="function" line="219" lineend="220" name="GetParseTupleArg" returns="str" signature="GetParseTupleArg()">
          <variable citdl="ArgFormatterShort" ilk="argument" name="self" />
        </scope>
        <scope ilk="function" line="231" lineend="239" name="GetParsePostCode" returns="self.arg.name" signature="GetParsePostCode()">
          <variable citdl="ArgFormatterShort" ilk="argument" name="self" />
          <variable citdl="str" line="232" name="s" />
        </scope>
      </scope>
      <scope classrefs="ArgFormatter" doc="An arg formatter for simple integer etc types" ilk="class" line="505" lineend="510" name="ArgFormatterSimple">
        <scope ilk="function" line="507" lineend="508" name="GetFormatChar" signature="GetFormatChar()">
          <variable citdl="ArgFormatterSimple" ilk="argument" name="self" />
        </scope>
        <scope attributes="protected" ilk="function" line="509" lineend="510" name="_GetPythonTypeDesc" signature="_GetPythonTypeDesc()">
          <variable citdl="ArgFormatterSimple" ilk="argument" name="self" />
        </scope>
      </scope>
      <scope classrefs="ArgFormatterPythonCOM" ilk="class" line="330" lineend="350" name="ArgFormatterTCHAR">
        <scope ilk="function" line="333" lineend="337" name="GetUnconstType" returns="list" signature="GetUnconstType()">
          <variable citdl="ArgFormatterTCHAR" ilk="argument" name="self" />
        </scope>
        <scope ilk="function" line="349" lineend="350" name="GetBuildForGatewayPostCode" returns="str" signature="GetBuildForGatewayPostCode()">
          <variable citdl="ArgFormatterTCHAR" ilk="argument" name="self" />
        </scope>
        <scope attributes="protected" ilk="function" line="331" lineend="332" name="_GetPythonTypeDesc" returns="str" signature="_GetPythonTypeDesc()">
          <variable citdl="ArgFormatterTCHAR" ilk="argument" name="self" />
        </scope>
        <scope ilk="function" line="342" lineend="346" name="GetBuildForInterfacePreCode" returns="tuple" signature="GetBuildForInterfacePreCode()">
          <variable citdl="ArgFormatterTCHAR" ilk="argument" name="self" />
          <variable citdl="self.GetIndirectedArgName()" line="344" name="notdirected" />
        </scope>
        <scope ilk="function" line="340" lineend="341" name="GetInterfaceArgCleanup" returns="str" signature="GetInterfaceArgCleanup()">
          <variable citdl="ArgFormatterTCHAR" ilk="argument" name="self" />
        </scope>
        <scope ilk="function" line="338" lineend="339" name="GetParsePostCode" returns="tuple" signature="GetParsePostCode()">
          <variable citdl="ArgFormatterTCHAR" ilk="argument" name="self" />
        </scope>
        <scope ilk="function" line="347" lineend="348" name="GetBuildForInterfacePostCode" returns="str" signature="GetBuildForInterfacePostCode()">
          <variable citdl="ArgFormatterTCHAR" ilk="argument" name="self" />
        </scope>
      </scope>
      <scope classrefs="ArgFormatterPythonCOM" ilk="class" line="364" lineend="390" name="ArgFormatterTime">
        <scope attributes="protected" ilk="function" line="374" lineend="375" name="_GetPythonTypeDesc" returns="str" signature="_GetPythonTypeDesc()">
          <variable citdl="ArgFormatterTime" ilk="argument" name="self" />
        </scope>
        <scope ilk="function" line="376" lineend="379" name="GetParsePostCode" returns="tuple" signature="GetParsePostCode()">
          <variable citdl="ArgFormatterTime" ilk="argument" name="self" />
        </scope>
        <scope ilk="function" line="380" lineend="383" name="GetBuildForInterfacePreCode" returns="tuple" signature="GetBuildForInterfacePreCode()">
          <variable citdl="ArgFormatterTime" ilk="argument" name="self" />
          <variable citdl="self.GetIndirectedArgName()" line="382" name="notdirected" />
        </scope>
        <scope attributes="__ctor__" ilk="function" line="365" lineend="372" name="__init__" signature="ArgFormatterTime(arg, builtinIndirection, declaredIndirection=0)">
          <variable citdl="ArgFormatterTime" ilk="argument" name="self" />
          <variable ilk="argument" name="arg" />
          <variable citdl="int" ilk="argument" name="builtinIndirection" />
          <variable citdl="int" ilk="argument" name="declaredIndirection" />
        </scope>
        <scope ilk="function" line="384" lineend="390" name="GetBuildForInterfacePostCode" returns="self.arg.name" signature="GetBuildForInterfacePostCode()">
          <variable citdl="ArgFormatterTime" ilk="argument" name="self" />
          <variable citdl="str" line="386" name="ret" />
        </scope>
      </scope>
      <scope classrefs="ArgFormatterLARGE_INTEGER" ilk="class" line="443" lineend="445" name="ArgFormatterULARGE_INTEGER">
        <scope ilk="function" line="444" lineend="445" name="GetKeyName" returns="str" signature="GetKeyName()">
          <variable citdl="ArgFormatterULARGE_INTEGER" ilk="argument" name="self" />
        </scope>
      </scope>
      <scope classrefs="ArgFormatterPythonCOM" ilk="class" line="471" lineend="479" name="ArgFormatterVARIANT">
        <scope ilk="function" line="475" lineend="477" name="GetBuildForGatewayPreCode" returns="tuple" signature="GetBuildForGatewayPreCode()">
          <variable citdl="ArgFormatterVARIANT" ilk="argument" name="self" />
          <variable citdl="self.GetIndirectedArgName()" line="476" name="notdirected" />
        </scope>
        <scope ilk="function" line="472" lineend="473" name="GetParsePostCode" returns="tuple" signature="GetParsePostCode()">
          <variable citdl="ArgFormatterVARIANT" ilk="argument" name="self" />
        </scope>
        <scope ilk="function" line="478" lineend="479" name="GetBuildForGatewayPostCode" returns="str" signature="GetBuildForGatewayPostCode()">
          <variable citdl="ArgFormatterVARIANT" ilk="argument" name="self" />
        </scope>
      </scope>
      <scope classrefs="object" doc="A representation of an argument to a COM method  This class contains information about a specific argument to a method." ilk="class" line="593" lineend="663" name="Argument">
        <variable citdl="re.compile()" line="602" name="regex" />
        <variable attributes="__instancevar__" citdl="int" line="607" name="arrayDecl" />
        <variable attributes="__instancevar__" citdl="int" line="606" name="const" />
        <variable attributes="__instancevar__" citdl="mo.group()" line="619" name="name" />
        <variable attributes="__instancevar__" line="622" name="raw_type" />
        <variable attributes="__instancevar__" line="604" name="good_interface_names" />
        <scope doc="Parse and build my data from a file" ilk="function" line="608" lineend="648" name="BuildFromFile" signature="BuildFromFile(file)">
          <variable citdl="Argument" ilk="argument" name="self" />
          <variable ilk="argument" name="file" />
          <variable citdl="file.readline()" line="615" name="line" />
          <variable citdl="self.regex.search()" line="616" name="mo" />
          <variable citdl="typ.replace()" line="621" name="typ" />
          <variable citdl="typ.rindex()" line="627" name="pos" />
        </scope>
        <scope doc="Determines if the argument has the specific attribute." ilk="function" line="650" lineend="657" name="HasAttribute" returns="bool" signature="HasAttribute(typ)">
          <variable citdl="Argument" ilk="argument" name="self" />
          <variable ilk="argument" name="typ" />
        </scope>
        <variable attributes="__instancevar__" line="605" name="inout" />
        <scope ilk="function" line="659" lineend="663" name="GetRawDeclaration" returns="tuple" signature="GetRawDeclaration()">
          <variable citdl="Argument" ilk="argument" name="self" />
          <variable citdl="str" line="660" name="ret" />
        </scope>
        <variable attributes="__instancevar__" citdl="int" line="623" name="indirectionLevel" />
        <variable attributes="__instancevar__" citdl="typ.replace()" line="641" name="type" />
        <scope attributes="__ctor__" ilk="function" line="603" lineend="607" name="__init__" signature="Argument(good_interface_names)">
          <variable citdl="Argument" ilk="argument" name="self" />
          <variable ilk="argument" name="good_interface_names" />
        </scope>
        <variable attributes="__instancevar__" citdl="list" line="643" name="unc_type" />
      </scope>
      <variable citdl="dict" line="482" name="ConvertSimpleTypes" />
      <variable citdl="int" line="26" name="DEBUG" />
      <scope classrefs="object" doc="A representation of a C++ COM Interface  This class contains information about a specific interface, as well as " ilk="class" line="706" lineend="732" name="Interface">
        <variable citdl="re.compile()" line="714" name="regex" />
        <variable attributes="__instancevar__" citdl="list" line="716" name="methods" />
        <variable attributes="__instancevar__" citdl="mo.group()" line="718" name="base" />
        <scope attributes="__ctor__" ilk="function" line="715" lineend="720" name="__init__" signature="Interface(mo)">
          <variable citdl="Interface" ilk="argument" name="self" />
          <variable ilk="argument" name="mo" />
        </scope>
        <scope doc="Build all sub-methods for this interface" ilk="function" line="722" lineend="732" name="BuildMethods" signature="BuildMethods(file)">
          <variable citdl="Interface" ilk="argument" name="self" />
          <variable ilk="argument" name="file" />
          <variable citdl="Method" line="728" name="method" />
        </scope>
        <variable attributes="__instancevar__" citdl="mo.group()" line="717" name="name" />
      </scope>
      <scope classrefs="object" doc="A representation of a C++ method on a COM interface  This class contains information about a specific method, as well as " ilk="class" line="665" lineend="704" name="Method">
        <variable citdl="re.compile()" line="673" name="regex" />
        <variable attributes="__instancevar__" citdl="mo.group()" line="676" name="name" />
        <variable attributes="__instancevar__" line="675" name="good_interface_names" />
        <variable attributes="__instancevar__" citdl="list" line="677" name="args" />
        <scope doc="Parse and build my data from a file" ilk="function" line="678" lineend="704" name="BuildFromFile" signature="BuildFromFile(file)">
          <variable citdl="Method" ilk="argument" name="self" />
          <variable ilk="argument" name="file" />
          <variable citdl="file.readline()" line="685" name="line" />
          <variable citdl="self.regex.search()" line="686" name="mo" />
          <variable citdl="Argument" line="699" name="arg" />
        </scope>
        <variable attributes="__instancevar__" citdl="mo.group()" line="690" name="result" />
        <scope attributes="__ctor__" ilk="function" line="674" lineend="677" name="__init__" signature="Method(good_interface_names)">
          <variable citdl="Method" ilk="argument" name="self" />
          <variable ilk="argument" name="good_interface_names" />
        </scope>
      </scope>
      <variable citdl="int" line="25" name="VERBOSE" />
      <scope classrefs="Exception" ilk="class" line="17" lineend="19" name="error_not_found">
        <scope attributes="__ctor__" ilk="function" line="18" lineend="19" name="__init__" signature="error_not_found(msg=&apos;The requested item could not be found&apos;)">
          <variable citdl="error_not_found" ilk="argument" name="self" />
          <variable citdl="str" ilk="argument" name="msg" />
        </scope>
      </scope>
      <scope classrefs="Exception" ilk="class" line="21" lineend="23" name="error_not_supported">
        <scope attributes="__ctor__" ilk="function" line="22" lineend="23" name="__init__" signature="error_not_supported(msg=&apos;The required functionality is not supported&apos;)">
          <variable citdl="error_not_supported" ilk="argument" name="self" />
          <variable citdl="str" ilk="argument" name="msg" />
        </scope>
      </scope>
      <scope doc="Find and return an interface in a file" ilk="function" line="734" lineend="756" name="find_interface" returns="Interface" signature="find_interface(interfaceName, file)">
        <variable ilk="argument" name="interfaceName" />
        <variable citdl="Interface.regex.search()" line="745" name="mo" />
        <variable ilk="argument" name="file" />
        <variable citdl="Interface" line="742" name="interface" />
        <variable citdl="file.readline()" line="743" name="line" />
        <variable citdl="mo.group()" line="747" name="name" />
      </scope>
      <variable citdl="str" name="key" />
      <scope ilk="function" line="575" lineend="587" name="make_arg_converter" returns="ArgFormatterInterface" signature="make_arg_converter(arg)">
        <variable line="578" name="bin" />
        <variable citdl="int" line="579" name="decl" />
        <variable line="577" name="clz" />
        <variable ilk="argument" name="arg" />
      </scope>
      <scope doc="Find, parse and return an interface in a file" ilk="function" line="759" lineend="770" name="parse_interface_info" returns="find_interface()" signature="parse_interface_info(interfaceName, file)">
        <variable ilk="argument" name="interfaceName" />
        <variable ilk="argument" name="file" />
      </scope>
      <import module="re" />
      <scope ilk="function" line="771" lineend="776" name="test" signature="test()">
        <variable citdl="open()" line="772" name="f" />
      </scope>
      <scope ilk="function" line="778" lineend="783" name="test_regex" signature="test_regex(r, text)">
        <variable ilk="argument" name="text" />
        <variable ilk="argument" name="r" />
        <variable citdl="r.search()" line="779" name="res" />
      </scope>
      <import module="traceback" />
    </scope>
    